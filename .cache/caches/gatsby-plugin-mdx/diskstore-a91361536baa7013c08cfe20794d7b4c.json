{"expireTime":9007200852499541000,"key":"gatsby-plugin-mdx-entire-payload-4256cb05a1589774175d9b690b7a88b3-","val":{"mdast":{"type":"root","children":[{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/cpp-stl-stack","children":[{"type":"text","value":"stack","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":9,"offset":9},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":26,"offset":26},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":26,"offset":26},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":26,"offset":26},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/cpp-stl-vector","children":[{"type":"text","value":"vector","position":{"start":{"line":3,"column":4,"offset":30},"end":{"line":3,"column":10,"offset":36},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":29},"end":{"line":3,"column":28,"offset":54},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":29},"end":{"line":3,"column":28,"offset":54},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":27},"end":{"line":3,"column":28,"offset":54},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/cpp-stl-queue","children":[{"type":"text","value":"queue","position":{"start":{"line":4,"column":4,"offset":58},"end":{"line":4,"column":9,"offset":63},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":57},"end":{"line":4,"column":26,"offset":80},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":57},"end":{"line":4,"column":26,"offset":80},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":55},"end":{"line":4,"column":26,"offset":80},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"","children":[{"type":"text","value":"deque","position":{"start":{"line":5,"column":4,"offset":84},"end":{"line":5,"column":9,"offset":89},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":83},"end":{"line":5,"column":12,"offset":92},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":83},"end":{"line":5,"column":12,"offset":92},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":81},"end":{"line":5,"column":12,"offset":92},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/cpp-stl-set","children":[{"type":"text","value":"set","position":{"start":{"line":6,"column":4,"offset":96},"end":{"line":6,"column":7,"offset":99},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":95},"end":{"line":6,"column":22,"offset":114},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":95},"end":{"line":6,"column":22,"offset":114},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":6,"column":22,"offset":114},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"","children":[{"type":"text","value":"pair","position":{"start":{"line":7,"column":4,"offset":118},"end":{"line":7,"column":8,"offset":122},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":117},"end":{"line":7,"column":11,"offset":125},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":117},"end":{"line":7,"column":11,"offset":125},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":115},"end":{"line":7,"column":11,"offset":125},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/cpp-stl-map","children":[{"type":"text","value":"map","position":{"start":{"line":8,"column":4,"offset":129},"end":{"line":8,"column":7,"offset":132},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":128},"end":{"line":8,"column":22,"offset":147},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":128},"end":{"line":8,"column":22,"offset":147},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":126},"end":{"line":8,"column":22,"offset":147},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"","children":[{"type":"text","value":"algorithm","position":{"start":{"line":9,"column":4,"offset":151},"end":{"line":9,"column":13,"offset":160},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":150},"end":{"line":9,"column":16,"offset":163},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":150},"end":{"line":9,"column":16,"offset":163},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":148},"end":{"line":9,"column":16,"offset":163},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":9,"column":16,"offset":163},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"CPP STL\",\"date\":\"2020-08-04T00:00:00.000Z\",\"tags\":[\"CPP\"]}","position":{"start":{"line":14,"column":1,"offset":168},"end":{"line":14,"column":97,"offset":264},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":14,"column":97,"offset":264}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CPP STL\",\n  \"date\": \"2020-08-04T00:00:00.000Z\",\n  \"tags\": [\"CPP\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/cpp-stl-stack\"\n  }), \"stack\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/cpp-stl-vector\"\n  }), \"vector\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/cpp-stl-queue\"\n  }), \"queue\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"deque\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/cpp-stl-set\"\n  }), \"set\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"pair\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/cpp-stl-map\"\n  }), \"map\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"algorithm\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"CPP STL\",\n  \"date\": \"2020-08-04T00:00:00.000Z\",\n  \"tags\": [\"CPP\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cpp-stl-stack\"\n        }}>{`stack`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cpp-stl-vector\"\n        }}>{`vector`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cpp-stl-queue\"\n        }}>{`queue`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`deque`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cpp-stl-set\"\n        }}>{`set`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`pair`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cpp-stl-map\"\n        }}>{`map`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`algorithm`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}