{"expireTime":9007200853102762000,"key":"gatsby-plugin-mdx-entire-payload-aa01eb34207d35b94706028ab05abb5f-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"차원 축소","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":10,"offset":10},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":10,"offset":10},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"차원","position":{"start":{"line":4,"column":5,"offset":16},"end":{"line":4,"column":7,"offset":18},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":14},"end":{"line":4,"column":9,"offset":20},"indent":[]}},{"type":"text","value":" : 독립변수의 개수","position":{"start":{"line":4,"column":9,"offset":20},"end":{"line":4,"column":20,"offset":31},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":14},"end":{"line":4,"column":20,"offset":31},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":12},"end":{"line":4,"column":20,"offset":31},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"차원의 저주","position":{"start":{"line":5,"column":5,"offset":36},"end":{"line":5,"column":11,"offset":42},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":34},"end":{"line":5,"column":13,"offset":44},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":34},"end":{"line":5,"column":13,"offset":44},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"데이터의 차원이 커질수록 해당 공간을 설명하기 위한 데이터의 양이 증가.","position":{"start":{"line":6,"column":7,"offset":51},"end":{"line":6,"column":47,"offset":91},"indent":[]}}],"position":{"start":{"line":6,"column":7,"offset":51},"end":{"line":6,"column":47,"offset":91},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":47},"end":{"line":6,"column":47,"offset":91},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"처음 가지고 있던 적은 데이터로 설명하기 때문에 과최적화 ⇒ 성능저하","position":{"start":{"line":7,"column":7,"offset":98},"end":{"line":7,"column":45,"offset":136},"indent":[]}}],"position":{"start":{"line":7,"column":7,"offset":98},"end":{"line":7,"column":45,"offset":136},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":94},"end":{"line":7,"column":45,"offset":136},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":47},"end":{"line":7,"column":45,"offset":136},"indent":[3]}}],"position":{"start":{"line":5,"column":1,"offset":32},"end":{"line":7,"column":45,"offset":136},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"차원 축소 방법","position":{"start":{"line":8,"column":3,"offset":139},"end":{"line":8,"column":11,"offset":147},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":139},"end":{"line":8,"column":11,"offset":147},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"PCA (Pricipal Component Analysis), 주성분 분석 : 데이터 분포의 분산이 큰 축을 찾는 방법","position":{"start":{"line":9,"column":7,"offset":154},"end":{"line":9,"column":73,"offset":220},"indent":[]}}],"position":{"start":{"line":9,"column":7,"offset":154},"end":{"line":9,"column":73,"offset":220},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":150},"end":{"line":9,"column":73,"offset":220},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"LDA (Linear Discriminant Analysis), 선형 판별 분석 : 데이터의 클래스 정보를 유지하면서 분리하는 축을 찾는 방법","position":{"start":{"line":10,"column":7,"offset":227},"end":{"line":10,"column":86,"offset":306},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":227},"end":{"line":10,"column":86,"offset":306},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":223},"end":{"line":10,"column":86,"offset":306},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":150},"end":{"line":10,"column":86,"offset":306},"indent":[3]}}],"position":{"start":{"line":8,"column":1,"offset":137},"end":{"line":10,"column":86,"offset":306},"indent":[1,1]}}],"position":{"start":{"line":4,"column":1,"offset":12},"end":{"line":10,"column":86,"offset":306},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"PCA","position":{"start":{"line":12,"column":5,"offset":312},"end":{"line":12,"column":8,"offset":315},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":308},"end":{"line":12,"column":8,"offset":315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"데이터의 분산이 가장 큰 축들을 주성분으로 삼아서 데이터를 분석","position":{"start":{"line":14,"column":1,"offset":317},"end":{"line":14,"column":36,"offset":352},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":317},"end":{"line":14,"column":36,"offset":352},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"주성분","position":{"start":{"line":16,"column":5,"offset":358},"end":{"line":16,"column":8,"offset":361},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":356},"end":{"line":16,"column":10,"offset":363},"indent":[]}},{"type":"text","value":" : 고유벡터와 고유값을 사용해서 구함","position":{"start":{"line":16,"column":10,"offset":363},"end":{"line":16,"column":31,"offset":384},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":356},"end":{"line":16,"column":31,"offset":384},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"고유벡터","position":{"start":{"line":17,"column":9,"offset":393},"end":{"line":17,"column":13,"offset":397},"indent":[]}}],"position":{"start":{"line":17,"column":7,"offset":391},"end":{"line":17,"column":15,"offset":399},"indent":[]}},{"type":"text","value":" : 데이터의 분포를 나타내는 선","position":{"start":{"line":17,"column":15,"offset":399},"end":{"line":17,"column":33,"offset":417},"indent":[]}}],"position":{"start":{"line":17,"column":7,"offset":391},"end":{"line":17,"column":33,"offset":417},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":387},"end":{"line":17,"column":33,"offset":417},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"고유값","position":{"start":{"line":18,"column":9,"offset":426},"end":{"line":18,"column":12,"offset":429},"indent":[]}}],"position":{"start":{"line":18,"column":7,"offset":424},"end":{"line":18,"column":14,"offset":431},"indent":[]}},{"type":"text","value":" : 해당 고유벡터에 데이터를 사상시켰을 때 데이터가 분포하는 분산","position":{"start":{"line":18,"column":14,"offset":431},"end":{"line":18,"column":51,"offset":468},"indent":[]}}],"position":{"start":{"line":18,"column":7,"offset":424},"end":{"line":18,"column":51,"offset":468},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":420},"end":{"line":18,"column":51,"offset":468},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":387},"end":{"line":18,"column":51,"offset":468},"indent":[3]}}],"position":{"start":{"line":16,"column":1,"offset":354},"end":{"line":18,"column":51,"offset":468},"indent":[1,1]}}],"position":{"start":{"line":16,"column":1,"offset":354},"end":{"line":18,"column":51,"offset":468},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://t1.daumcdn.net/cfile/tistory/996F65335B8A493207?download","children":[{"type":"text","value":"https://t1.daumcdn.net/cfile/tistory/996F65335B8A493207?download","position":{"start":{"line":20,"column":2,"offset":471},"end":{"line":20,"column":66,"offset":535},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":470},"end":{"line":20,"column":133,"offset":602},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":470},"end":{"line":20,"column":133,"offset":602},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"과정","position":{"start":{"line":22,"column":3,"offset":606},"end":{"line":22,"column":5,"offset":608},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":606},"end":{"line":22,"column":5,"offset":608},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"데이터 셋에서 분산이 가장 큰 축을 찾음","position":{"start":{"line":23,"column":8,"offset":616},"end":{"line":23,"column":30,"offset":638},"indent":[]}}],"position":{"start":{"line":23,"column":8,"offset":616},"end":{"line":23,"column":30,"offset":638},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":611},"end":{"line":23,"column":30,"offset":638},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"첫번째 축과 직교하면서 분산이 가장 큰 두번째 축을 찾음","position":{"start":{"line":24,"column":8,"offset":646},"end":{"line":24,"column":39,"offset":677},"indent":[]}}],"position":{"start":{"line":24,"column":8,"offset":646},"end":{"line":24,"column":39,"offset":677},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":641},"end":{"line":24,"column":39,"offset":677},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"위와 같은 방법을 차원(특성의 수)만큼 찾음","position":{"start":{"line":25,"column":8,"offset":685},"end":{"line":25,"column":32,"offset":709},"indent":[]}}],"position":{"start":{"line":25,"column":8,"offset":685},"end":{"line":25,"column":32,"offset":709},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":680},"end":{"line":25,"column":32,"offset":709},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":611},"end":{"line":25,"column":32,"offset":709},"indent":[3,3]}}],"position":{"start":{"line":22,"column":1,"offset":604},"end":{"line":25,"column":32,"offset":709},"indent":[1,1,1]}}],"position":{"start":{"line":22,"column":1,"offset":604},"end":{"line":25,"column":32,"offset":709},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"LDA","position":{"start":{"line":27,"column":5,"offset":715},"end":{"line":27,"column":8,"offset":718},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":711},"end":{"line":27,"column":8,"offset":718},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"다음 조건을 만족하는 벡터를 찾는 작업","position":{"start":{"line":29,"column":1,"offset":720},"end":{"line":29,"column":22,"offset":741},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":720},"end":{"line":29,"column":22,"offset":741},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"각 클래스의 중심간 거리가 최대인 벡터, 클래스간 분리를 잘 이뤄내는 벡터","position":{"start":{"line":31,"column":3,"offset":745},"end":{"line":31,"column":44,"offset":786},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":745},"end":{"line":31,"column":44,"offset":786},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":743},"end":{"line":31,"column":44,"offset":786},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"각 클래스 내 데이터의 분산이 최소인 벡터","position":{"start":{"line":32,"column":3,"offset":789},"end":{"line":32,"column":26,"offset":812},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":789},"end":{"line":32,"column":26,"offset":812},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":787},"end":{"line":32,"column":26,"offset":812},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":743},"end":{"line":32,"column":26,"offset":812},"indent":[1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.imgur.com/6ggd2F0.png","alt":"https://i.imgur.com/6ggd2F0.png","position":{"start":{"line":34,"column":1,"offset":814},"end":{"line":34,"column":68,"offset":881},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":814},"end":{"line":34,"column":68,"offset":881},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":36,"column":1,"offset":883},"end":{"line":36,"column":4,"offset":886},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"NMF","position":{"start":{"line":38,"column":5,"offset":892},"end":{"line":38,"column":8,"offset":895},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":888},"end":{"line":38,"column":8,"offset":895},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Non-negative Matrix Factorization (비음수 행렬 인수분해)","position":{"start":{"line":40,"column":3,"offset":899},"end":{"line":40,"column":50,"offset":946},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":899},"end":{"line":40,"column":50,"offset":946},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":897},"end":{"line":40,"column":50,"offset":946},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"행렬 V가 있을 때 W*H=V 두 행렬로 분해","position":{"start":{"line":41,"column":3,"offset":949},"end":{"line":41,"column":28,"offset":974},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":949},"end":{"line":41,"column":28,"offset":974},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"W(가중치 행렬) : W의 각 열이 특성. 행은 V의 같은 행이 얼마나 적합한지, 가중치를 나타냄","position":{"start":{"line":42,"column":7,"offset":981},"end":{"line":42,"column":61,"offset":1035},"indent":[]}}],"position":{"start":{"line":42,"column":7,"offset":981},"end":{"line":42,"column":61,"offset":1035},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":977},"end":{"line":42,"column":61,"offset":1035},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"H(특성 행렬) : H의 각 행이 특성. 열은 V의 같은 열이 특성에 얼마나 중요한지","position":{"start":{"line":43,"column":7,"offset":1042},"end":{"line":43,"column":54,"offset":1089},"indent":[]}}],"position":{"start":{"line":43,"column":7,"offset":1042},"end":{"line":43,"column":54,"offset":1089},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1038},"end":{"line":43,"column":54,"offset":1089},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":977},"end":{"line":43,"column":54,"offset":1089},"indent":[3]}}],"position":{"start":{"line":41,"column":1,"offset":947},"end":{"line":43,"column":54,"offset":1089},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"PCA는 최대 분산의 방향을 주성분이라 하여 성분 간의 우열이 있는 반면 \nNMF는 특성이 양수이기만 하면 성분의 우열이 없이 특징을 나눌 수 있는 것이다","position":{"start":{"line":44,"column":3,"offset":1092},"end":{"line":45,"column":45,"offset":1178},"indent":[1]}}],"position":{"start":{"line":44,"column":3,"offset":1092},"end":{"line":45,"column":45,"offset":1178},"indent":[1]}}],"position":{"start":{"line":44,"column":1,"offset":1090},"end":{"line":45,"column":45,"offset":1178},"indent":[1]}}],"position":{"start":{"line":40,"column":1,"offset":897},"end":{"line":45,"column":45,"offset":1178},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"<파이썬을 이용한 빅데이터 분석> ch10 PCA, LDA, NMF\",\"date\":\"2020-08-25T00:00:00.000Z\",\"tags\":[\"Python\",\"BigData\",\"MachineLearning\"]}","position":{"start":{"line":47,"column":1,"offset":1180},"end":{"line":47,"column":158,"offset":1337},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":47,"column":158,"offset":1337}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"<파이썬을 이용한 빅데이터 분석> ch10 PCA, LDA, NMF\",\n  \"date\": \"2020-08-25T00:00:00.000Z\",\n  \"tags\": [\"Python\", \"BigData\", \"MachineLearning\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uCC28\\uC6D0 \\uCD95\\uC18C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uCC28\\uC6D0\"), \" : \\uB3C5\\uB9BD\\uBCC0\\uC218\\uC758 \\uAC1C\\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uCC28\\uC6D0\\uC758 \\uC800\\uC8FC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130\\uC758 \\uCC28\\uC6D0\\uC774 \\uCEE4\\uC9C8\\uC218\\uB85D \\uD574\\uB2F9 \\uACF5\\uAC04\\uC744 \\uC124\\uBA85\\uD558\\uAE30 \\uC704\\uD55C \\uB370\\uC774\\uD130\\uC758 \\uC591\\uC774 \\uC99D\\uAC00.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C \\uAC00\\uC9C0\\uACE0 \\uC788\\uB358 \\uC801\\uC740 \\uB370\\uC774\\uD130\\uB85C \\uC124\\uBA85\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uACFC\\uCD5C\\uC801\\uD654 \\u21D2 \\uC131\\uB2A5\\uC800\\uD558\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC28\\uC6D0 \\uCD95\\uC18C \\uBC29\\uBC95\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PCA (Pricipal Component Analysis), \\uC8FC\\uC131\\uBD84 \\uBD84\\uC11D : \\uB370\\uC774\\uD130 \\uBD84\\uD3EC\\uC758 \\uBD84\\uC0B0\\uC774 \\uD070 \\uCD95\\uC744 \\uCC3E\\uB294 \\uBC29\\uBC95\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LDA (Linear Discriminant Analysis), \\uC120\\uD615 \\uD310\\uBCC4 \\uBD84\\uC11D : \\uB370\\uC774\\uD130\\uC758 \\uD074\\uB798\\uC2A4 \\uC815\\uBCF4\\uB97C \\uC720\\uC9C0\\uD558\\uBA74\\uC11C \\uBD84\\uB9AC\\uD558\\uB294 \\uCD95\\uC744 \\uCC3E\\uB294 \\uBC29\\uBC95\")))), mdx(\"h3\", null, \"PCA\"), mdx(\"p\", null, \"\\uB370\\uC774\\uD130\\uC758 \\uBD84\\uC0B0\\uC774 \\uAC00\\uC7A5 \\uD070 \\uCD95\\uB4E4\\uC744 \\uC8FC\\uC131\\uBD84\\uC73C\\uB85C \\uC0BC\\uC544\\uC11C \\uB370\\uC774\\uD130\\uB97C \\uBD84\\uC11D\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uC8FC\\uC131\\uBD84\"), \" : \\uACE0\\uC720\\uBCA1\\uD130\\uC640 \\uACE0\\uC720\\uAC12\\uC744 \\uC0AC\\uC6A9\\uD574\\uC11C \\uAD6C\\uD568\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uACE0\\uC720\\uBCA1\\uD130\"), \" : \\uB370\\uC774\\uD130\\uC758 \\uBD84\\uD3EC\\uB97C \\uB098\\uD0C0\\uB0B4\\uB294 \\uC120\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uACE0\\uC720\\uAC12\"), \" : \\uD574\\uB2F9 \\uACE0\\uC720\\uBCA1\\uD130\\uC5D0 \\uB370\\uC774\\uD130\\uB97C \\uC0AC\\uC0C1\\uC2DC\\uCF30\\uC744 \\uB54C \\uB370\\uC774\\uD130\\uAC00 \\uBD84\\uD3EC\\uD558\\uB294 \\uBD84\\uC0B0\")))), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://t1.daumcdn.net/cfile/tistory/996F65335B8A493207?download\"\n  }), \"https://t1.daumcdn.net/cfile/tistory/996F65335B8A493207?download\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACFC\\uC815\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uB370\\uC774\\uD130 \\uC14B\\uC5D0\\uC11C \\uBD84\\uC0B0\\uC774 \\uAC00\\uC7A5 \\uD070 \\uCD95\\uC744 \\uCC3E\\uC74C\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uCCAB\\uBC88\\uC9F8 \\uCD95\\uACFC \\uC9C1\\uAD50\\uD558\\uBA74\\uC11C \\uBD84\\uC0B0\\uC774 \\uAC00\\uC7A5 \\uD070 \\uB450\\uBC88\\uC9F8 \\uCD95\\uC744 \\uCC3E\\uC74C\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC704\\uC640 \\uAC19\\uC740 \\uBC29\\uBC95\\uC744 \\uCC28\\uC6D0(\\uD2B9\\uC131\\uC758 \\uC218)\\uB9CC\\uD07C \\uCC3E\\uC74C\")))), mdx(\"h3\", null, \"LDA\"), mdx(\"p\", null, \"\\uB2E4\\uC74C \\uC870\\uAC74\\uC744 \\uB9CC\\uC871\\uD558\\uB294 \\uBCA1\\uD130\\uB97C \\uCC3E\\uB294 \\uC791\\uC5C5\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC01 \\uD074\\uB798\\uC2A4\\uC758 \\uC911\\uC2EC\\uAC04 \\uAC70\\uB9AC\\uAC00 \\uCD5C\\uB300\\uC778 \\uBCA1\\uD130, \\uD074\\uB798\\uC2A4\\uAC04 \\uBD84\\uB9AC\\uB97C \\uC798 \\uC774\\uB904\\uB0B4\\uB294 \\uBCA1\\uD130\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC01 \\uD074\\uB798\\uC2A4 \\uB0B4 \\uB370\\uC774\\uD130\\uC758 \\uBD84\\uC0B0\\uC774 \\uCD5C\\uC18C\\uC778 \\uBCA1\\uD130\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.imgur.com/6ggd2F0.png\",\n    \"alt\": \"https://i.imgur.com/6ggd2F0.png\"\n  }))), mdx(\"hr\", null), mdx(\"h3\", null, \"NMF\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-negative Matrix Factorization (\\uBE44\\uC74C\\uC218 \\uD589\\uB82C \\uC778\\uC218\\uBD84\\uD574)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD589\\uB82C V\\uAC00 \\uC788\\uC744 \\uB54C W*H=V \\uB450 \\uD589\\uB82C\\uB85C \\uBD84\\uD574\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"W(\\uAC00\\uC911\\uCE58 \\uD589\\uB82C) : W\\uC758 \\uAC01 \\uC5F4\\uC774 \\uD2B9\\uC131. \\uD589\\uC740 V\\uC758 \\uAC19\\uC740 \\uD589\\uC774 \\uC5BC\\uB9C8\\uB098 \\uC801\\uD569\\uD55C\\uC9C0, \\uAC00\\uC911\\uCE58\\uB97C \\uB098\\uD0C0\\uB0C4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"H(\\uD2B9\\uC131 \\uD589\\uB82C) : H\\uC758 \\uAC01 \\uD589\\uC774 \\uD2B9\\uC131. \\uC5F4\\uC740 V\\uC758 \\uAC19\\uC740 \\uC5F4\\uC774 \\uD2B9\\uC131\\uC5D0 \\uC5BC\\uB9C8\\uB098 \\uC911\\uC694\\uD55C\\uC9C0\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PCA\\uB294 \\uCD5C\\uB300 \\uBD84\\uC0B0\\uC758 \\uBC29\\uD5A5\\uC744 \\uC8FC\\uC131\\uBD84\\uC774\\uB77C \\uD558\\uC5EC \\uC131\\uBD84 \\uAC04\\uC758 \\uC6B0\\uC5F4\\uC774 \\uC788\\uB294 \\uBC18\\uBA74\\nNMF\\uB294 \\uD2B9\\uC131\\uC774 \\uC591\\uC218\\uC774\\uAE30\\uB9CC \\uD558\\uBA74 \\uC131\\uBD84\\uC758 \\uC6B0\\uC5F4\\uC774 \\uC5C6\\uC774 \\uD2B9\\uC9D5\\uC744 \\uB098\\uB20C \\uC218 \\uC788\\uB294 \\uAC83\\uC774\\uB2E4\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"<파이썬을 이용한 빅데이터 분석> ch10 PCA, LDA, NMF\",\n  \"date\": \"2020-08-25T00:00:00.000Z\",\n  \"tags\": [\"Python\", \"BigData\", \"MachineLearning\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`차원 축소`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`차원`}</strong>{` : 독립변수의 개수`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`차원의 저주`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`데이터의 차원이 커질수록 해당 공간을 설명하기 위한 데이터의 양이 증가.`}</li>\n          <li parentName=\"ul\">{`처음 가지고 있던 적은 데이터로 설명하기 때문에 과최적화 ⇒ 성능저하`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`차원 축소 방법`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`PCA (Pricipal Component Analysis), 주성분 분석 : 데이터 분포의 분산이 큰 축을 찾는 방법`}</li>\n          <li parentName=\"ul\">{`LDA (Linear Discriminant Analysis), 선형 판별 분석 : 데이터의 클래스 정보를 유지하면서 분리하는 축을 찾는 방법`}</li>\n        </ul></li>\n    </ul>\n    <h3>{`PCA`}</h3>\n    <p>{`데이터의 분산이 가장 큰 축들을 주성분으로 삼아서 데이터를 분석`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`주성분`}</strong>{` : 고유벡터와 고유값을 사용해서 구함`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`고유벡터`}</strong>{` : 데이터의 분포를 나타내는 선`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`고유값`}</strong>{` : 해당 고유벡터에 데이터를 사상시켰을 때 데이터가 분포하는 분산`}</li>\n        </ul></li>\n    </ul>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://t1.daumcdn.net/cfile/tistory/996F65335B8A493207?download\"\n      }}>{`https://t1.daumcdn.net/cfile/tistory/996F65335B8A493207?download`}</a></p>\n    <ul>\n      <li parentName=\"ul\">{`과정`}<ol parentName=\"li\">\n          <li parentName=\"ol\">{`데이터 셋에서 분산이 가장 큰 축을 찾음`}</li>\n          <li parentName=\"ol\">{`첫번째 축과 직교하면서 분산이 가장 큰 두번째 축을 찾음`}</li>\n          <li parentName=\"ol\">{`위와 같은 방법을 차원(특성의 수)만큼 찾음`}</li>\n        </ol></li>\n    </ul>\n    <h3>{`LDA`}</h3>\n    <p>{`다음 조건을 만족하는 벡터를 찾는 작업`}</p>\n    <ul>\n      <li parentName=\"ul\">{`각 클래스의 중심간 거리가 최대인 벡터, 클래스간 분리를 잘 이뤄내는 벡터`}</li>\n      <li parentName=\"ul\">{`각 클래스 내 데이터의 분산이 최소인 벡터`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.imgur.com/6ggd2F0.png\",\n        \"alt\": \"https://i.imgur.com/6ggd2F0.png\"\n      }}></img></p>\n    <hr></hr>\n    <h3>{`NMF`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Non-negative Matrix Factorization (비음수 행렬 인수분해)`}</li>\n      <li parentName=\"ul\">{`행렬 V가 있을 때 W*H=V 두 행렬로 분해`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`W(가중치 행렬) : W의 각 열이 특성. 행은 V의 같은 행이 얼마나 적합한지, 가중치를 나타냄`}</li>\n          <li parentName=\"ul\">{`H(특성 행렬) : H의 각 행이 특성. 열은 V의 같은 열이 특성에 얼마나 중요한지`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`PCA는 최대 분산의 방향을 주성분이라 하여 성분 간의 우열이 있는 반면\nNMF는 특성이 양수이기만 하면 성분의 우열이 없이 특징을 나눌 수 있는 것이다`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}