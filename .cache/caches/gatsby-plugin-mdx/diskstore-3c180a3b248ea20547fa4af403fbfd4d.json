{"expireTime":9007200852409586000,"key":"gatsby-plugin-mdx-entire-payload-cc8e90e99e622416d282a12ab0aa45a5-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"상수와 변수","position":{"start":{"line":3,"column":5,"offset":6},"end":{"line":3,"column":11,"offset":12},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":11,"offset":12},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"상수선언 키워드 ","position":{"start":{"line":5,"column":3,"offset":16},"end":{"line":5,"column":12,"offset":25},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":5,"column":12,"offset":25},"end":{"line":5,"column":17,"offset":30},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":16},"end":{"line":5,"column":17,"offset":30},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"상수선언 ","position":{"start":{"line":6,"column":5,"offset":35},"end":{"line":6,"column":10,"offset":40},"indent":[]}},{"type":"inlineCode","value":"let 이름: 타입 = 값","position":{"start":{"line":6,"column":10,"offset":40},"end":{"line":6,"column":26,"offset":56},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":35},"end":{"line":6,"column":26,"offset":56},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":33},"end":{"line":6,"column":26,"offset":56},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":33},"end":{"line":6,"column":26,"offset":56},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":14},"end":{"line":6,"column":26,"offset":56},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"변수선언 키워드 ","position":{"start":{"line":7,"column":3,"offset":59},"end":{"line":7,"column":12,"offset":68},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":7,"column":12,"offset":68},"end":{"line":7,"column":17,"offset":73},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":59},"end":{"line":7,"column":17,"offset":73},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"변수 선언 ","position":{"start":{"line":8,"column":5,"offset":78},"end":{"line":8,"column":11,"offset":84},"indent":[]}},{"type":"inlineCode","value":"var 이름: 타입 = 값","position":{"start":{"line":8,"column":11,"offset":84},"end":{"line":8,"column":27,"offset":100},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":78},"end":{"line":8,"column":27,"offset":100},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":76},"end":{"line":8,"column":27,"offset":100},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":76},"end":{"line":8,"column":27,"offset":100},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":57},"end":{"line":8,"column":27,"offset":100},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":14},"end":{"line":8,"column":27,"offset":100},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"기본 데이터 타입","position":{"start":{"line":10,"column":5,"offset":106},"end":{"line":10,"column":14,"offset":115},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":102},"end":{"line":10,"column":14,"offset":115},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Bool : true, false. 0,1로 대체할 수는 없다","position":{"start":{"line":12,"column":3,"offset":119},"end":{"line":12,"column":37,"offset":153},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":119},"end":{"line":12,"column":37,"offset":153},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":117},"end":{"line":12,"column":37,"offset":153},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Int : 정수","position":{"start":{"line":13,"column":3,"offset":156},"end":{"line":13,"column":11,"offset":164},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":156},"end":{"line":13,"column":11,"offset":164},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":154},"end":{"line":13,"column":11,"offset":164},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Uint : 양의 정수","position":{"start":{"line":14,"column":3,"offset":167},"end":{"line":14,"column":15,"offset":179},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":167},"end":{"line":14,"column":15,"offset":179},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":165},"end":{"line":14,"column":15,"offset":179},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Float : 32비트, 부동소수형","position":{"start":{"line":15,"column":3,"offset":182},"end":{"line":15,"column":22,"offset":201},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":182},"end":{"line":15,"column":22,"offset":201},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":180},"end":{"line":15,"column":22,"offset":201},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Double : 64비트, 부동소수형","position":{"start":{"line":16,"column":3,"offset":204},"end":{"line":16,"column":23,"offset":224},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":204},"end":{"line":16,"column":23,"offset":224},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":202},"end":{"line":16,"column":23,"offset":224},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Character : 문자. 유니코드. 큰따옴표","position":{"start":{"line":17,"column":3,"offset":227},"end":{"line":17,"column":29,"offset":253},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":227},"end":{"line":17,"column":29,"offset":253},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":225},"end":{"line":17,"column":29,"offset":253},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"String : 문자열. 큰따옴표. ","position":{"start":{"line":18,"column":3,"offset":256},"end":{"line":18,"column":23,"offset":276},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":256},"end":{"line":18,"column":23,"offset":276},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":254},"end":{"line":18,"column":23,"offset":276},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":117},"end":{"line":18,"column":23,"offset":276},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"다른 데이터 타입과 자료교환은 암시적으로 불가능","position":{"start":{"line":20,"column":1,"offset":278},"end":{"line":20,"column":27,"offset":304},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":278},"end":{"line":20,"column":27,"offset":304},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Any, AnyObject, nil","position":{"start":{"line":22,"column":5,"offset":310},"end":{"line":22,"column":24,"offset":329},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":306},"end":{"line":22,"column":24,"offset":329},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Any : 스위프트의 모든 타입을 지칭하는 키워드","position":{"start":{"line":24,"column":3,"offset":333},"end":{"line":24,"column":30,"offset":360},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":333},"end":{"line":24,"column":30,"offset":360},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":331},"end":{"line":24,"column":30,"offset":360},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AnyObject : 모든 클래스 타입을 지칭하는 프로토콜","position":{"start":{"line":25,"column":3,"offset":363},"end":{"line":25,"column":35,"offset":395},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":363},"end":{"line":25,"column":35,"offset":395},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":361},"end":{"line":25,"column":35,"offset":395},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"nil : 없음을 의미하는 키워드. Any, AnyObject에 할당불가","position":{"start":{"line":26,"column":4,"offset":399},"end":{"line":26,"column":44,"offset":439},"indent":[]}}],"position":{"start":{"line":26,"column":4,"offset":399},"end":{"line":26,"column":44,"offset":439},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":396},"end":{"line":26,"column":44,"offset":439},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":331},"end":{"line":26,"column":44,"offset":439},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"컬렉션 타입","position":{"start":{"line":28,"column":5,"offset":445},"end":{"line":28,"column":11,"offset":451},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":441},"end":{"line":28,"column":11,"offset":451},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Array : 순서가 있는 리스트 컬렉션","position":{"start":{"line":30,"column":3,"offset":455},"end":{"line":30,"column":25,"offset":477},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":455},"end":{"line":30,"column":25,"offset":477},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":453},"end":{"line":30,"column":25,"offset":477},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":453},"end":{"line":30,"column":25,"offset":477},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"var integers: Array<Int> = Array<Int>()\nintegers.append(1)\nintegers.append(2) // [1,2]\n\nintegers.contains(3) // false\n\nintegers.count // 2\n\nintegers.remove(at: 0)\t// 1\nintegers.removeLast()\t\t// 2\nintegers.removeAll()\t\t// []\n\nvar doubles: Array<Double> = [Double]()\nvar strings: [String] = [String]()\nvar characters: [Character] = []","position":{"start":{"line":32,"column":1,"offset":479},"end":{"line":48,"column":4,"offset":824},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dictionary : 키와 값의 쌍으로 이뤄진 컬렉션","position":{"start":{"line":50,"column":3,"offset":828},"end":{"line":50,"column":33,"offset":858},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":828},"end":{"line":50,"column":33,"offset":858},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":826},"end":{"line":50,"column":33,"offset":858},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":826},"end":{"line":50,"column":33,"offset":858},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"var anyDictionary: Dictionary<String, Any> = [String: Any]()\nanyDictionary[\"someKey\"] = \"value\"\nanyDictionary[\"anotherKey\"] = 100\n\nanyDictionary.removeValue(forKey:\"anotherKey\") // 100\nanyDictionary[\"someKey\"] = nil\nanyDictionary // [:]","position":{"start":{"line":52,"column":1,"offset":860},"end":{"line":60,"column":4,"offset":1109},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set : 순서가 없고, 멤버가 유일한 컬렉션","position":{"start":{"line":62,"column":3,"offset":1113},"end":{"line":62,"column":28,"offset":1138},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":1113},"end":{"line":62,"column":28,"offset":1138},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1111},"end":{"line":62,"column":28,"offset":1138},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1111},"end":{"line":62,"column":28,"offset":1138},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"var integerSet: Set<Int> = Set<Int>()\nintegerSet.insert(1)\nintegerSet.insert(1)\nintegerSet.insert(1)\nintegerSet.insert(2)\nintegerSet.insert(3)\nintegerSet\t// {1,2,3}\n\nintegerSet.contain(1) // true\n\nintegerSet.count\t\t\t// 3\n\nintegerSet.remove(100)\nintegerSet.removeFirst()\n\n","position":{"start":{"line":64,"column":1,"offset":1140},"end":{"line":81,"column":4,"offset":1424},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"함수","position":{"start":{"line":85,"column":5,"offset":1432},"end":{"line":85,"column":7,"offset":1434},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":1428},"end":{"line":85,"column":7,"offset":1434},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"함수 선언","position":{"start":{"line":87,"column":6,"offset":1441},"end":{"line":87,"column":11,"offset":1446},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":1436},"end":{"line":87,"column":11,"offset":1446},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"func sum(a: Int, b: Int) -> Int {\n  return a+b\n}\n\nfunc printName(name: String) -> Void {\n  print(name)\n}\n\nsum(a: 3,b:5) // 8","position":{"start":{"line":89,"column":1,"offset":1448},"end":{"line":99,"column":4,"offset":1585},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"기본값을 가지는 함수","position":{"start":{"line":101,"column":6,"offset":1592},"end":{"line":101,"column":17,"offset":1603},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":1587},"end":{"line":101,"column":17,"offset":1603},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"기본값을 가지는 매개변수는 마지막에 둬야","position":{"start":{"line":103,"column":1,"offset":1605},"end":{"line":103,"column":23,"offset":1627},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":1605},"end":{"line":103,"column":23,"offset":1627},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"func greeting(friend: String, me: String=\"Tom\"){\n  print(\"hello \\(friend)! I'm \\(me)\")\n}","position":{"start":{"line":105,"column":1,"offset":1629},"end":{"line":109,"column":4,"offset":1730},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"전달인자","position":{"start":{"line":111,"column":6,"offset":1737},"end":{"line":111,"column":10,"offset":1741},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":1732},"end":{"line":111,"column":10,"offset":1741},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"매개변수의 역할을 좀 더 명확하게 하거나","position":{"start":{"line":113,"column":3,"offset":1745},"end":{"line":113,"column":25,"offset":1767},"indent":[]}}],"position":{"start":{"line":113,"column":3,"offset":1745},"end":{"line":113,"column":25,"offset":1767},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":1743},"end":{"line":113,"column":25,"offset":1767},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"사용자 입장에서 표현하고자 할 때 사용","position":{"start":{"line":114,"column":3,"offset":1770},"end":{"line":114,"column":24,"offset":1791},"indent":[]}}],"position":{"start":{"line":114,"column":3,"offset":1770},"end":{"line":114,"column":24,"offset":1791},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":1768},"end":{"line":114,"column":24,"offset":1791},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"오버로딩 역할 가능","position":{"start":{"line":115,"column":3,"offset":1794},"end":{"line":115,"column":13,"offset":1804},"indent":[]}}],"position":{"start":{"line":115,"column":3,"offset":1794},"end":{"line":115,"column":13,"offset":1804},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":1792},"end":{"line":115,"column":13,"offset":1804},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":1743},"end":{"line":115,"column":13,"offset":1804},"indent":[1,1]}},{"type":"code","lang":"swift","meta":null,"value":"func greeting(to friend: String, from me: String=\"Tom\"){\n  print(\"hello \\(friend)! I'm \\(me)\")\n}","position":{"start":{"line":117,"column":1,"offset":1806},"end":{"line":121,"column":4,"offset":1915},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"가변매개변수","position":{"start":{"line":123,"column":6,"offset":1922},"end":{"line":123,"column":12,"offset":1928},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":1917},"end":{"line":123,"column":12,"offset":1928},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"func sayHelloToFriends(me: String, friends: String...) -> String {\n  return \"Hello \\(friends)! I'm \\(me)\"\n}\n\nprint(sayHelloToFriends(me: \"Tom\", friends: \"Jack\", \"eric\", \"wing\"))","position":{"start":{"line":125,"column":1,"offset":1930},"end":{"line":131,"column":4,"offset":2120},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"스위프트는 함수형 패러다임을 포함하는 다중 패러다임 언어","position":{"start":{"line":133,"column":1,"offset":2122},"end":{"line":133,"column":32,"offset":2153},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":2122},"end":{"line":133,"column":32,"offset":2153},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"스위프트의 함수는 일급객체이므로 변수, 상수 등에 저장이 가능하고 매개변수로 전달도 가능","position":{"start":{"line":135,"column":1,"offset":2155},"end":{"line":135,"column":50,"offset":2204},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2155},"end":{"line":135,"column":50,"offset":2204},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"조건문","position":{"start":{"line":137,"column":5,"offset":2210},"end":{"line":137,"column":8,"offset":2213},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":2206},"end":{"line":137,"column":8,"offset":2213},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"if else","position":{"start":{"line":139,"column":6,"offset":2220},"end":{"line":139,"column":13,"offset":2227},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2215},"end":{"line":139,"column":13,"offset":2227},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"소괄호는 생략가능하지만 중괄호는 생략 불가","position":{"start":{"line":141,"column":3,"offset":2231},"end":{"line":141,"column":26,"offset":2254},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":2231},"end":{"line":141,"column":26,"offset":2254},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":2229},"end":{"line":141,"column":26,"offset":2254},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"조건문은 항상 Bool 타입이 와야 함","position":{"start":{"line":142,"column":3,"offset":2257},"end":{"line":142,"column":24,"offset":2278},"indent":[]}}],"position":{"start":{"line":142,"column":3,"offset":2257},"end":{"line":142,"column":24,"offset":2278},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":2255},"end":{"line":142,"column":24,"offset":2278},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":2229},"end":{"line":142,"column":24,"offset":2278},"indent":[1]}},{"type":"code","lang":"swift","meta":null,"value":"if condition {\n  ...\n} else {\n  ...\n}","position":{"start":{"line":144,"column":1,"offset":2280},"end":{"line":150,"column":4,"offset":2330},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"switch","position":{"start":{"line":152,"column":6,"offset":2337},"end":{"line":152,"column":12,"offset":2343},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":2332},"end":{"line":152,"column":12,"offset":2343},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Default는 반드시 작성할 것","position":{"start":{"line":154,"column":3,"offset":2347},"end":{"line":154,"column":21,"offset":2365},"indent":[]}}],"position":{"start":{"line":154,"column":3,"offset":2347},"end":{"line":154,"column":21,"offset":2365},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":2345},"end":{"line":154,"column":21,"offset":2365},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"break","position":{"start":{"line":155,"column":3,"offset":2368},"end":{"line":155,"column":10,"offset":2375},"indent":[]}},{"type":"text","value":" 문을 사용하지 않음. 굳이 사용하겠다면 ","position":{"start":{"line":155,"column":10,"offset":2375},"end":{"line":155,"column":33,"offset":2398},"indent":[]}},{"type":"inlineCode","value":"fallthrough","position":{"start":{"line":155,"column":33,"offset":2398},"end":{"line":155,"column":46,"offset":2411},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":2368},"end":{"line":155,"column":46,"offset":2411},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":2366},"end":{"line":155,"column":46,"offset":2411},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":2345},"end":{"line":155,"column":46,"offset":2411},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"반복문","position":{"start":{"line":157,"column":5,"offset":2417},"end":{"line":157,"column":8,"offset":2420},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":2413},"end":{"line":157,"column":8,"offset":2420},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"var integers = [1,2,3]\nlet dictionary = [\"a\":1,\"b\":2,\"c\":3]","position":{"start":{"line":159,"column":1,"offset":2422},"end":{"line":162,"column":4,"offset":2494},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"for ... in","position":{"start":{"line":164,"column":6,"offset":2501},"end":{"line":164,"column":16,"offset":2511},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":2496},"end":{"line":164,"column":16,"offset":2511},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"for integer in integers {\n  print(integer)\n}\n\nfor (char,num) in dictionary {\n  print(\"\\(char): \\(num)\")\n}","position":{"start":{"line":166,"column":1,"offset":2513},"end":{"line":174,"column":4,"offset":2631},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"while","position":{"start":{"line":176,"column":6,"offset":2638},"end":{"line":176,"column":11,"offset":2643},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":2633},"end":{"line":176,"column":11,"offset":2643},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"while integers.count > 1 {\n  integers.removeLast()\n}","position":{"start":{"line":178,"column":1,"offset":2645},"end":{"line":182,"column":4,"offset":2710},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"repeat-while","position":{"start":{"line":184,"column":6,"offset":2717},"end":{"line":184,"column":18,"offset":2729},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":2712},"end":{"line":184,"column":18,"offset":2729},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"repeat {\n  integers.removeLast()\n} while integers.count > 0","position":{"start":{"line":186,"column":1,"offset":2731},"end":{"line":190,"column":4,"offset":2803},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"do while과 같은 형태","position":{"start":{"line":192,"column":3,"offset":2807},"end":{"line":192,"column":18,"offset":2822},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":2807},"end":{"line":192,"column":18,"offset":2822},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":2805},"end":{"line":192,"column":18,"offset":2822},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"do","position":{"start":{"line":193,"column":3,"offset":2825},"end":{"line":193,"column":7,"offset":2829},"indent":[]}},{"type":"text","value":" 는 스위프트에서의 오류처리 키워드","position":{"start":{"line":193,"column":7,"offset":2829},"end":{"line":193,"column":26,"offset":2848},"indent":[]}}],"position":{"start":{"line":193,"column":3,"offset":2825},"end":{"line":193,"column":26,"offset":2848},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":2823},"end":{"line":193,"column":26,"offset":2848},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":2805},"end":{"line":193,"column":26,"offset":2848},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"옵셔널","position":{"start":{"line":195,"column":5,"offset":2854},"end":{"line":195,"column":8,"offset":2857},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":2850},"end":{"line":195,"column":8,"offset":2857},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"값이 있을 수도 있고 없을 수도 있는 것.\n","position":{"start":{"line":197,"column":1,"offset":2859},"end":{"line":198,"column":1,"offset":2883},"indent":[1]}},{"type":"inlineCode","value":"nil","position":{"start":{"line":198,"column":1,"offset":2883},"end":{"line":198,"column":6,"offset":2888},"indent":[]}},{"type":"text","value":" 가능성을 문서화 하지 않아도 코드만으로 충분히 표현가능. 옵셔널이 아니라면 ","position":{"start":{"line":198,"column":6,"offset":2888},"end":{"line":198,"column":49,"offset":2931},"indent":[]}},{"type":"inlineCode","value":"nil","position":{"start":{"line":198,"column":49,"offset":2931},"end":{"line":198,"column":54,"offset":2936},"indent":[]}},{"type":"text","value":" 체크를 안 해도 안심","position":{"start":{"line":198,"column":54,"offset":2936},"end":{"line":198,"column":66,"offset":2948},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":2859},"end":{"line":198,"column":66,"offset":2948},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"옵셔널은 열거형 + 제너럴의 형태","position":{"start":{"line":200,"column":1,"offset":2950},"end":{"line":200,"column":19,"offset":2968},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":2950},"end":{"line":200,"column":19,"offset":2968},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"enum Optional<Wrapped> : ExpressibleByNilLiteral {\n  case none\n  case some(Wrapped)\n}\n\nlet optionalValue: Optional<Int> = nil\nlet optionalValue: Int? = nil","position":{"start":{"line":202,"column":1,"offset":2970},"end":{"line":210,"column":4,"offset":3138},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"!","position":{"start":{"line":214,"column":7,"offset":3148},"end":{"line":214,"column":8,"offset":3149},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":3142},"end":{"line":214,"column":8,"offset":3149},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"var optionaleVaue: Int! = 100\n\nswitch optionalValue { \n  case .none:\n  \tprint(\"This Optional variable is nill\")\n  case .some(let value):\n  \tprint(\"Value is \\(value)\")\n}","position":{"start":{"line":216,"column":1,"offset":3151},"end":{"line":225,"column":4,"offset":3332},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Inmplicitly Unwrapped Optional (암시적 추출 옵셔널) ","position":{"start":{"line":227,"column":3,"offset":3336},"end":{"line":227,"column":47,"offset":3380},"indent":[]}}],"position":{"start":{"line":227,"column":3,"offset":3336},"end":{"line":227,"column":47,"offset":3380},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":3334},"end":{"line":227,"column":47,"offset":3380},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"기존 변수처럼 사용 가능","position":{"start":{"line":228,"column":3,"offset":3383},"end":{"line":228,"column":16,"offset":3396},"indent":[]}}],"position":{"start":{"line":228,"column":3,"offset":3383},"end":{"line":228,"column":16,"offset":3396},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":3381},"end":{"line":228,"column":16,"offset":3396},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"nil","position":{"start":{"line":229,"column":3,"offset":3399},"end":{"line":229,"column":8,"offset":3404},"indent":[]}},{"type":"text","value":" 할당 가능","position":{"start":{"line":229,"column":8,"offset":3404},"end":{"line":229,"column":14,"offset":3410},"indent":[]}}],"position":{"start":{"line":229,"column":3,"offset":3399},"end":{"line":229,"column":14,"offset":3410},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":3397},"end":{"line":229,"column":14,"offset":3410},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":3334},"end":{"line":229,"column":14,"offset":3410},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"?","position":{"start":{"line":231,"column":7,"offset":3418},"end":{"line":231,"column":8,"offset":3419},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":3412},"end":{"line":231,"column":8,"offset":3419},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"nil","position":{"start":{"line":233,"column":3,"offset":3423},"end":{"line":233,"column":8,"offset":3428},"indent":[]}},{"type":"text","value":" 할당 가능","position":{"start":{"line":233,"column":8,"offset":3428},"end":{"line":233,"column":14,"offset":3434},"indent":[]}}],"position":{"start":{"line":233,"column":3,"offset":3423},"end":{"line":233,"column":14,"offset":3434},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":3421},"end":{"line":233,"column":14,"offset":3434},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"기존 변수처럼 사용 불가 - 옵셔널과 일반 값은 다른 타입이므로 연산 불가","position":{"start":{"line":234,"column":3,"offset":3437},"end":{"line":234,"column":44,"offset":3478},"indent":[]}}],"position":{"start":{"line":234,"column":3,"offset":3437},"end":{"line":234,"column":44,"offset":3478},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":3435},"end":{"line":234,"column":44,"offset":3478},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":3421},"end":{"line":234,"column":44,"offset":3478},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Optional Unwrapping","position":{"start":{"line":236,"column":6,"offset":3485},"end":{"line":236,"column":25,"offset":3504},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":3480},"end":{"line":236,"column":25,"offset":3504},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Optional Binding","position":{"start":{"line":238,"column":7,"offset":3512},"end":{"line":238,"column":23,"offset":3528},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":3506},"end":{"line":238,"column":23,"offset":3528},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"func printName(name: String) {\n  print(name)\n}\nvar myName: String! = nil\n\nif let name: String = myName {\n  printName(name)\n} else {\n  print(\"myName == nil\")\n}","position":{"start":{"line":240,"column":1,"offset":3530},"end":{"line":251,"column":4,"offset":3701},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"if-let","position":{"start":{"line":253,"column":1,"offset":3703},"end":{"line":253,"column":9,"offset":3711},"indent":[]}},{"type":"text","value":" 을 이용하여 ","position":{"start":{"line":253,"column":9,"offset":3711},"end":{"line":253,"column":17,"offset":3719},"indent":[]}},{"type":"inlineCode","value":"name","position":{"start":{"line":253,"column":17,"offset":3719},"end":{"line":253,"column":23,"offset":3725},"indent":[]}},{"type":"text","value":" 에 ","position":{"start":{"line":253,"column":23,"offset":3725},"end":{"line":253,"column":26,"offset":3728},"indent":[]}},{"type":"inlineCode","value":"myName","position":{"start":{"line":253,"column":26,"offset":3728},"end":{"line":253,"column":34,"offset":3736},"indent":[]}},{"type":"text","value":" 을 바인딩하여 사용\n","position":{"start":{"line":253,"column":34,"offset":3736},"end":{"line":254,"column":1,"offset":3748},"indent":[1]}},{"type":"inlineCode","value":"name","position":{"start":{"line":254,"column":1,"offset":3748},"end":{"line":254,"column":7,"offset":3754},"indent":[]}},{"type":"text","value":" 은 ","position":{"start":{"line":254,"column":7,"offset":3754},"end":{"line":254,"column":10,"offset":3757},"indent":[]}},{"type":"inlineCode","value":"if-let","position":{"start":{"line":254,"column":10,"offset":3757},"end":{"line":254,"column":18,"offset":3765},"indent":[]}},{"type":"text","value":" 구문 내에서만 사용 가능","position":{"start":{"line":254,"column":18,"offset":3765},"end":{"line":254,"column":32,"offset":3779},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":3703},"end":{"line":254,"column":32,"offset":3779},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Force Unwrapping","position":{"start":{"line":256,"column":7,"offset":3787},"end":{"line":256,"column":23,"offset":3803},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":3781},"end":{"line":256,"column":23,"offset":3803},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"옵셔널의 값을 강제로 추출. 비추 방식","position":{"start":{"line":258,"column":1,"offset":3805},"end":{"line":258,"column":22,"offset":3826},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":3805},"end":{"line":258,"column":22,"offset":3826},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"var myName2: String? = \"optional\"\nprintName(myName2!) // !를 붙어 강제 추출\n\nmyName2 = nil\nprint(myName!)\n// 강제추출 시 값이 없으므로 런타임 오류 발생\n\nvar yourName: String! = nil\nprintName(yourName)\n// 암시적 추출 옵셔널을 붙이면 알아서 변수뒤에 !를 붙임\n// nil값이 전달되기 떄문에 런타임 오류 발생","position":{"start":{"line":260,"column":1,"offset":3828},"end":{"line":272,"column":4,"offset":4078},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"구조체","position":{"start":{"line":276,"column":5,"offset":4086},"end":{"line":276,"column":8,"offset":4089},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":4082},"end":{"line":276,"column":8,"offset":4089},"indent":[]}},{"type":"code","lang":"swift","meta":null,"value":"struct Sample {\n  var mutableProperty: Int = 100 // 가변 프로퍼티\n  let immutableProperty: Int = 100 // 불변 프로퍼티\n  \n  static var typeProperty: Int = 100 // 타입 프로퍼티\n  \n  // 인스턴스 메서드\n  func instanceMethod() {\n    print(\"instance method\")\n  }\n  // 타입 메서드\n  static func typeMethod() {\n    print(\"type method\")\n  }\n}\n\n// 가변 인스턴스, 가변프로퍼티만 변경 가능\nvar mutable: Sample = Sample()\n\n// 불변 인스턴스, 어떤 프로퍼티도 변경 불가\nlet immutable: Sample = Sample()\n\nSample.typeMethod() // type method","position":{"start":{"line":278,"column":1,"offset":4091},"end":{"line":302,"column":4,"offset":4563},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"클래스","position":{"start":{"line":306,"column":5,"offset":4571},"end":{"line":306,"column":8,"offset":4574},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":4567},"end":{"line":306,"column":8,"offset":4574},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"구조체와 굉장히 유사하지만 구조체는 값 타입이고, 클래스는 참조 타입이다","position":{"start":{"line":308,"column":3,"offset":4578},"end":{"line":308,"column":43,"offset":4618},"indent":[]}}],"position":{"start":{"line":308,"column":3,"offset":4578},"end":{"line":308,"column":43,"offset":4618},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":4576},"end":{"line":308,"column":43,"offset":4618},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"다중 상속이 되지 않음","position":{"start":{"line":309,"column":3,"offset":4621},"end":{"line":309,"column":15,"offset":4633},"indent":[]}}],"position":{"start":{"line":309,"column":3,"offset":4621},"end":{"line":309,"column":15,"offset":4633},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":4619},"end":{"line":309,"column":15,"offset":4633},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":4576},"end":{"line":309,"column":15,"offset":4633},"indent":[1]}},{"type":"code","lang":"swift","meta":null,"value":"class Sample {\n  var mutableProperty: Int = 100 // 가변 프로퍼티\n  let immutableProperty: Int = 100 // 불변 프로퍼티\n  \n  static var typeProperty: Int = 100 // 타입 프로퍼티\n  \n  // 인스턴스 메서드\n  func instanceMethod() {\n    print(\"instance method\")\n  }\n  // 타입 메서드\n  // 재정의 불가 타입 메서드 - static\n  static func typeMethod() {\n    print(\"type method -static\")\n  }\n  // 재정의 가능 타입 메서드 - class\n  class func classMethod() {\n    print(\"type method -class\")\n  }\n}","position":{"start":{"line":311,"column":1,"offset":4635},"end":{"line":332,"column":4,"offset":5079},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"불변 인스턴스로 생성을 해도 가변프로퍼티 변경 가능","position":{"start":{"line":334,"column":1,"offset":5081},"end":{"line":334,"column":29,"offset":5109},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":5081},"end":{"line":334,"column":29,"offset":5109},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Swift 간단 정리\",\"date\":\"2020-08-17T00:00:00.000Z\",\"tags\":[\"Swift\"]}","position":{"start":{"line":336,"column":1,"offset":5111},"end":{"line":336,"column":103,"offset":5213},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":336,"column":103,"offset":5213}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Swift 간단 정리\",\n  \"date\": \"2020-08-17T00:00:00.000Z\",\n  \"tags\": [\"Swift\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uC0C1\\uC218\\uC640 \\uBCC0\\uC218\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0C1\\uC218\\uC120\\uC5B8 \\uD0A4\\uC6CC\\uB4DC \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"let\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0C1\\uC218\\uC120\\uC5B8 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"let \\uC774\\uB984: \\uD0C0\\uC785 = \\uAC12\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCC0\\uC218\\uC120\\uC5B8 \\uD0A4\\uC6CC\\uB4DC \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"var\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCC0\\uC218 \\uC120\\uC5B8 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"var \\uC774\\uB984: \\uD0C0\\uC785 = \\uAC12\"))))), mdx(\"h3\", null, \"\\uAE30\\uBCF8 \\uB370\\uC774\\uD130 \\uD0C0\\uC785\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bool : true, false. 0,1\\uB85C \\uB300\\uCCB4\\uD560 \\uC218\\uB294 \\uC5C6\\uB2E4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Int : \\uC815\\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uint : \\uC591\\uC758 \\uC815\\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Float : 32\\uBE44\\uD2B8, \\uBD80\\uB3D9\\uC18C\\uC218\\uD615\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Double : 64\\uBE44\\uD2B8, \\uBD80\\uB3D9\\uC18C\\uC218\\uD615\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Character : \\uBB38\\uC790. \\uC720\\uB2C8\\uCF54\\uB4DC. \\uD070\\uB530\\uC634\\uD45C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"String : \\uBB38\\uC790\\uC5F4. \\uD070\\uB530\\uC634\\uD45C. \")), mdx(\"p\", null, \"\\uB2E4\\uB978 \\uB370\\uC774\\uD130 \\uD0C0\\uC785\\uACFC \\uC790\\uB8CC\\uAD50\\uD658\\uC740 \\uC554\\uC2DC\\uC801\\uC73C\\uB85C \\uBD88\\uAC00\\uB2A5\"), mdx(\"h3\", null, \"Any, AnyObject, nil\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any : \\uC2A4\\uC704\\uD504\\uD2B8\\uC758 \\uBAA8\\uB4E0 \\uD0C0\\uC785\\uC744 \\uC9C0\\uCE6D\\uD558\\uB294 \\uD0A4\\uC6CC\\uB4DC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AnyObject : \\uBAA8\\uB4E0 \\uD074\\uB798\\uC2A4 \\uD0C0\\uC785\\uC744 \\uC9C0\\uCE6D\\uD558\\uB294 \\uD504\\uB85C\\uD1A0\\uCF5C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nil : \\uC5C6\\uC74C\\uC744 \\uC758\\uBBF8\\uD558\\uB294 \\uD0A4\\uC6CC\\uB4DC. Any, AnyObject\\uC5D0 \\uD560\\uB2F9\\uBD88\\uAC00\")), mdx(\"h3\", null, \"\\uCEEC\\uB809\\uC158 \\uD0C0\\uC785\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Array : \\uC21C\\uC11C\\uAC00 \\uC788\\uB294 \\uB9AC\\uC2A4\\uD2B8 \\uCEEC\\uB809\\uC158\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"var integers: Array<Int> = Array<Int>()\\nintegers.append(1)\\nintegers.append(2) // [1,2]\\n\\nintegers.contains(3) // false\\n\\nintegers.count // 2\\n\\nintegers.remove(at: 0)  // 1\\nintegers.removeLast()       // 2\\nintegers.removeAll()        // []\\n\\nvar doubles: Array<Double> = [Double]()\\nvar strings: [String] = [String]()\\nvar characters: [Character] = []\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dictionary : \\uD0A4\\uC640 \\uAC12\\uC758 \\uC30D\\uC73C\\uB85C \\uC774\\uB904\\uC9C4 \\uCEEC\\uB809\\uC158\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"var anyDictionary: Dictionary<String, Any> = [String: Any]()\\nanyDictionary[\\\"someKey\\\"] = \\\"value\\\"\\nanyDictionary[\\\"anotherKey\\\"] = 100\\n\\nanyDictionary.removeValue(forKey:\\\"anotherKey\\\") // 100\\nanyDictionary[\\\"someKey\\\"] = nil\\nanyDictionary // [:]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set : \\uC21C\\uC11C\\uAC00 \\uC5C6\\uACE0, \\uBA64\\uBC84\\uAC00 \\uC720\\uC77C\\uD55C \\uCEEC\\uB809\\uC158\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"var integerSet: Set<Int> = Set<Int>()\\nintegerSet.insert(1)\\nintegerSet.insert(1)\\nintegerSet.insert(1)\\nintegerSet.insert(2)\\nintegerSet.insert(3)\\nintegerSet  // {1,2,3}\\n\\nintegerSet.contain(1) // true\\n\\nintegerSet.count            // 3\\n\\nintegerSet.remove(100)\\nintegerSet.removeFirst()\\n\\n\\n\")), mdx(\"h3\", null, \"\\uD568\\uC218\"), mdx(\"h4\", null, \"\\uD568\\uC218 \\uC120\\uC5B8\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"func sum(a: Int, b: Int) -> Int {\\n  return a+b\\n}\\n\\nfunc printName(name: String) -> Void {\\n  print(name)\\n}\\n\\nsum(a: 3,b:5) // 8\\n\")), mdx(\"h4\", null, \"\\uAE30\\uBCF8\\uAC12\\uC744 \\uAC00\\uC9C0\\uB294 \\uD568\\uC218\"), mdx(\"p\", null, \"\\uAE30\\uBCF8\\uAC12\\uC744 \\uAC00\\uC9C0\\uB294 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uB294 \\uB9C8\\uC9C0\\uB9C9\\uC5D0 \\uB46C\\uC57C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"func greeting(friend: String, me: String=\\\"Tom\\\"){\\n  print(\\\"hello \\\\(friend)! I'm \\\\(me)\\\")\\n}\\n\")), mdx(\"h4\", null, \"\\uC804\\uB2EC\\uC778\\uC790\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9E4\\uAC1C\\uBCC0\\uC218\\uC758 \\uC5ED\\uD560\\uC744 \\uC880 \\uB354 \\uBA85\\uD655\\uD558\\uAC8C \\uD558\\uAC70\\uB098\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC6A9\\uC790 \\uC785\\uC7A5\\uC5D0\\uC11C \\uD45C\\uD604\\uD558\\uACE0\\uC790 \\uD560 \\uB54C \\uC0AC\\uC6A9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC624\\uBC84\\uB85C\\uB529 \\uC5ED\\uD560 \\uAC00\\uB2A5\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"func greeting(to friend: String, from me: String=\\\"Tom\\\"){\\n  print(\\\"hello \\\\(friend)! I'm \\\\(me)\\\")\\n}\\n\")), mdx(\"h4\", null, \"\\uAC00\\uBCC0\\uB9E4\\uAC1C\\uBCC0\\uC218\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"func sayHelloToFriends(me: String, friends: String...) -> String {\\n  return \\\"Hello \\\\(friends)! I'm \\\\(me)\\\"\\n}\\n\\nprint(sayHelloToFriends(me: \\\"Tom\\\", friends: \\\"Jack\\\", \\\"eric\\\", \\\"wing\\\"))\\n\")), mdx(\"p\", null, \"\\uC2A4\\uC704\\uD504\\uD2B8\\uB294 \\uD568\\uC218\\uD615 \\uD328\\uB7EC\\uB2E4\\uC784\\uC744 \\uD3EC\\uD568\\uD558\\uB294 \\uB2E4\\uC911 \\uD328\\uB7EC\\uB2E4\\uC784 \\uC5B8\\uC5B4\"), mdx(\"p\", null, \"\\uC2A4\\uC704\\uD504\\uD2B8\\uC758 \\uD568\\uC218\\uB294 \\uC77C\\uAE09\\uAC1D\\uCCB4\\uC774\\uBBC0\\uB85C \\uBCC0\\uC218, \\uC0C1\\uC218 \\uB4F1\\uC5D0 \\uC800\\uC7A5\\uC774 \\uAC00\\uB2A5\\uD558\\uACE0 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uB85C \\uC804\\uB2EC\\uB3C4 \\uAC00\\uB2A5\"), mdx(\"h3\", null, \"\\uC870\\uAC74\\uBB38\"), mdx(\"h4\", null, \"if else\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC18C\\uAD04\\uD638\\uB294 \\uC0DD\\uB7B5\\uAC00\\uB2A5\\uD558\\uC9C0\\uB9CC \\uC911\\uAD04\\uD638\\uB294 \\uC0DD\\uB7B5 \\uBD88\\uAC00\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC870\\uAC74\\uBB38\\uC740 \\uD56D\\uC0C1 Bool \\uD0C0\\uC785\\uC774 \\uC640\\uC57C \\uD568\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"if condition {\\n  ...\\n} else {\\n  ...\\n}\\n\")), mdx(\"h4\", null, \"switch\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Default\\uB294 \\uBC18\\uB4DC\\uC2DC \\uC791\\uC131\\uD560 \\uAC83\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"break\"), \" \\uBB38\\uC744 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC74C. \\uAD73\\uC774 \\uC0AC\\uC6A9\\uD558\\uACA0\\uB2E4\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fallthrough\"))), mdx(\"h3\", null, \"\\uBC18\\uBCF5\\uBB38\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"var integers = [1,2,3]\\nlet dictionary = [\\\"a\\\":1,\\\"b\\\":2,\\\"c\\\":3]\\n\")), mdx(\"h4\", null, \"for ... in\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"for integer in integers {\\n  print(integer)\\n}\\n\\nfor (char,num) in dictionary {\\n  print(\\\"\\\\(char): \\\\(num)\\\")\\n}\\n\")), mdx(\"h4\", null, \"while\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"while integers.count > 1 {\\n  integers.removeLast()\\n}\\n\")), mdx(\"h4\", null, \"repeat-while\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"repeat {\\n  integers.removeLast()\\n} while integers.count > 0\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do while\\uACFC \\uAC19\\uC740 \\uD615\\uD0DC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"do\"), \" \\uB294 \\uC2A4\\uC704\\uD504\\uD2B8\\uC5D0\\uC11C\\uC758 \\uC624\\uB958\\uCC98\\uB9AC \\uD0A4\\uC6CC\\uB4DC\")), mdx(\"h3\", null, \"\\uC635\\uC154\\uB110\"), mdx(\"p\", null, \"\\uAC12\\uC774 \\uC788\\uC744 \\uC218\\uB3C4 \\uC788\\uACE0 \\uC5C6\\uC744 \\uC218\\uB3C4 \\uC788\\uB294 \\uAC83.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nil\"), \" \\uAC00\\uB2A5\\uC131\\uC744 \\uBB38\\uC11C\\uD654 \\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uCF54\\uB4DC\\uB9CC\\uC73C\\uB85C \\uCDA9\\uBD84\\uD788 \\uD45C\\uD604\\uAC00\\uB2A5. \\uC635\\uC154\\uB110\\uC774 \\uC544\\uB2C8\\uB77C\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nil\"), \" \\uCCB4\\uD06C\\uB97C \\uC548 \\uD574\\uB3C4 \\uC548\\uC2EC\"), mdx(\"p\", null, \"\\uC635\\uC154\\uB110\\uC740 \\uC5F4\\uAC70\\uD615 + \\uC81C\\uB108\\uB7F4\\uC758 \\uD615\\uD0DC\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"enum Optional<Wrapped> : ExpressibleByNilLiteral {\\n  case none\\n  case some(Wrapped)\\n}\\n\\nlet optionalValue: Optional<Int> = nil\\nlet optionalValue: Int? = nil\\n\")), mdx(\"h5\", null, \"!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"var optionaleVaue: Int! = 100\\n\\nswitch optionalValue { \\n  case .none:\\n    print(\\\"This Optional variable is nill\\\")\\n  case .some(let value):\\n    print(\\\"Value is \\\\(value)\\\")\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inmplicitly Unwrapped Optional (\\uC554\\uC2DC\\uC801 \\uCD94\\uCD9C \\uC635\\uC154\\uB110) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAE30\\uC874 \\uBCC0\\uC218\\uCC98\\uB7FC \\uC0AC\\uC6A9 \\uAC00\\uB2A5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nil\"), \" \\uD560\\uB2F9 \\uAC00\\uB2A5\")), mdx(\"h5\", null, \"?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nil\"), \" \\uD560\\uB2F9 \\uAC00\\uB2A5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAE30\\uC874 \\uBCC0\\uC218\\uCC98\\uB7FC \\uC0AC\\uC6A9 \\uBD88\\uAC00 - \\uC635\\uC154\\uB110\\uACFC \\uC77C\\uBC18 \\uAC12\\uC740 \\uB2E4\\uB978 \\uD0C0\\uC785\\uC774\\uBBC0\\uB85C \\uC5F0\\uC0B0 \\uBD88\\uAC00\")), mdx(\"h4\", null, \"Optional Unwrapping\"), mdx(\"h5\", null, \"Optional Binding\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"func printName(name: String) {\\n  print(name)\\n}\\nvar myName: String! = nil\\n\\nif let name: String = myName {\\n  printName(name)\\n} else {\\n  print(\\\"myName == nil\\\")\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"if-let\"), \" \\uC744 \\uC774\\uC6A9\\uD558\\uC5EC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" \\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myName\"), \" \\uC744 \\uBC14\\uC778\\uB529\\uD558\\uC5EC \\uC0AC\\uC6A9\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" \\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"if-let\"), \" \\uAD6C\\uBB38 \\uB0B4\\uC5D0\\uC11C\\uB9CC \\uC0AC\\uC6A9 \\uAC00\\uB2A5\"), mdx(\"h5\", null, \"Force Unwrapping\"), mdx(\"p\", null, \"\\uC635\\uC154\\uB110\\uC758 \\uAC12\\uC744 \\uAC15\\uC81C\\uB85C \\uCD94\\uCD9C. \\uBE44\\uCD94 \\uBC29\\uC2DD\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"var myName2: String? = \\\"optional\\\"\\nprintName(myName2!) // !\\uB97C \\uBD99\\uC5B4 \\uAC15\\uC81C \\uCD94\\uCD9C\\n\\nmyName2 = nil\\nprint(myName!)\\n// \\uAC15\\uC81C\\uCD94\\uCD9C \\uC2DC \\uAC12\\uC774 \\uC5C6\\uC73C\\uBBC0\\uB85C \\uB7F0\\uD0C0\\uC784 \\uC624\\uB958 \\uBC1C\\uC0DD\\n\\nvar yourName: String! = nil\\nprintName(yourName)\\n// \\uC554\\uC2DC\\uC801 \\uCD94\\uCD9C \\uC635\\uC154\\uB110\\uC744 \\uBD99\\uC774\\uBA74 \\uC54C\\uC544\\uC11C \\uBCC0\\uC218\\uB4A4\\uC5D0 !\\uB97C \\uBD99\\uC784\\n// nil\\uAC12\\uC774 \\uC804\\uB2EC\\uB418\\uAE30 \\uB584\\uBB38\\uC5D0 \\uB7F0\\uD0C0\\uC784 \\uC624\\uB958 \\uBC1C\\uC0DD\\n\")), mdx(\"h3\", null, \"\\uAD6C\\uC870\\uCCB4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"struct Sample {\\n  var mutableProperty: Int = 100 // \\uAC00\\uBCC0 \\uD504\\uB85C\\uD37C\\uD2F0\\n  let immutableProperty: Int = 100 // \\uBD88\\uBCC0 \\uD504\\uB85C\\uD37C\\uD2F0\\n  \\n  static var typeProperty: Int = 100 // \\uD0C0\\uC785 \\uD504\\uB85C\\uD37C\\uD2F0\\n  \\n  // \\uC778\\uC2A4\\uD134\\uC2A4 \\uBA54\\uC11C\\uB4DC\\n  func instanceMethod() {\\n    print(\\\"instance method\\\")\\n  }\\n  // \\uD0C0\\uC785 \\uBA54\\uC11C\\uB4DC\\n  static func typeMethod() {\\n    print(\\\"type method\\\")\\n  }\\n}\\n\\n// \\uAC00\\uBCC0 \\uC778\\uC2A4\\uD134\\uC2A4, \\uAC00\\uBCC0\\uD504\\uB85C\\uD37C\\uD2F0\\uB9CC \\uBCC0\\uACBD \\uAC00\\uB2A5\\nvar mutable: Sample = Sample()\\n\\n// \\uBD88\\uBCC0 \\uC778\\uC2A4\\uD134\\uC2A4, \\uC5B4\\uB5A4 \\uD504\\uB85C\\uD37C\\uD2F0\\uB3C4 \\uBCC0\\uACBD \\uBD88\\uAC00\\nlet immutable: Sample = Sample()\\n\\nSample.typeMethod() // type method\\n\")), mdx(\"h3\", null, \"\\uD074\\uB798\\uC2A4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAD6C\\uC870\\uCCB4\\uC640 \\uAD49\\uC7A5\\uD788 \\uC720\\uC0AC\\uD558\\uC9C0\\uB9CC \\uAD6C\\uC870\\uCCB4\\uB294 \\uAC12 \\uD0C0\\uC785\\uC774\\uACE0, \\uD074\\uB798\\uC2A4\\uB294 \\uCC38\\uC870 \\uD0C0\\uC785\\uC774\\uB2E4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC911 \\uC0C1\\uC18D\\uC774 \\uB418\\uC9C0 \\uC54A\\uC74C\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift\"\n  }), \"class Sample {\\n  var mutableProperty: Int = 100 // \\uAC00\\uBCC0 \\uD504\\uB85C\\uD37C\\uD2F0\\n  let immutableProperty: Int = 100 // \\uBD88\\uBCC0 \\uD504\\uB85C\\uD37C\\uD2F0\\n  \\n  static var typeProperty: Int = 100 // \\uD0C0\\uC785 \\uD504\\uB85C\\uD37C\\uD2F0\\n  \\n  // \\uC778\\uC2A4\\uD134\\uC2A4 \\uBA54\\uC11C\\uB4DC\\n  func instanceMethod() {\\n    print(\\\"instance method\\\")\\n  }\\n  // \\uD0C0\\uC785 \\uBA54\\uC11C\\uB4DC\\n  // \\uC7AC\\uC815\\uC758 \\uBD88\\uAC00 \\uD0C0\\uC785 \\uBA54\\uC11C\\uB4DC - static\\n  static func typeMethod() {\\n    print(\\\"type method -static\\\")\\n  }\\n  // \\uC7AC\\uC815\\uC758 \\uAC00\\uB2A5 \\uD0C0\\uC785 \\uBA54\\uC11C\\uB4DC - class\\n  class func classMethod() {\\n    print(\\\"type method -class\\\")\\n  }\\n}\\n\")), mdx(\"p\", null, \"\\uBD88\\uBCC0 \\uC778\\uC2A4\\uD134\\uC2A4\\uB85C \\uC0DD\\uC131\\uC744 \\uD574\\uB3C4 \\uAC00\\uBCC0\\uD504\\uB85C\\uD37C\\uD2F0 \\uBCC0\\uACBD \\uAC00\\uB2A5\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Swift 간단 정리\",\n  \"date\": \"2020-08-17T00:00:00.000Z\",\n  \"tags\": [\"Swift\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`상수와 변수`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`상수선언 키워드 `}<inlineCode parentName=\"li\">{`let`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`상수선언 `}<inlineCode parentName=\"li\">{`let 이름: 타입 = 값`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`변수선언 키워드 `}<inlineCode parentName=\"li\">{`var`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`변수 선언 `}<inlineCode parentName=\"li\">{`var 이름: 타입 = 값`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    <h3>{`기본 데이터 타입`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Bool : true, false. 0,1로 대체할 수는 없다`}</li>\n      <li parentName=\"ul\">{`Int : 정수`}</li>\n      <li parentName=\"ul\">{`Uint : 양의 정수`}</li>\n      <li parentName=\"ul\">{`Float : 32비트, 부동소수형`}</li>\n      <li parentName=\"ul\">{`Double : 64비트, 부동소수형`}</li>\n      <li parentName=\"ul\">{`Character : 문자. 유니코드. 큰따옴표`}</li>\n      <li parentName=\"ul\">{`String : 문자열. 큰따옴표. `}</li>\n    </ul>\n    <p>{`다른 데이터 타입과 자료교환은 암시적으로 불가능`}</p>\n    <h3>{`Any, AnyObject, nil`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Any : 스위프트의 모든 타입을 지칭하는 키워드`}</li>\n      <li parentName=\"ul\">{`AnyObject : 모든 클래스 타입을 지칭하는 프로토콜`}</li>\n      <li parentName=\"ul\">{`nil : 없음을 의미하는 키워드. Any, AnyObject에 할당불가`}</li>\n    </ul>\n    <h3>{`컬렉션 타입`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Array : 순서가 있는 리스트 컬렉션`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var integers: Array<Int> = Array<Int>()\nintegers.append(1)\nintegers.append(2) // [1,2]\n\nintegers.contains(3) // false\n\nintegers.count // 2\n\nintegers.remove(at: 0)  // 1\nintegers.removeLast()       // 2\nintegers.removeAll()        // []\n\nvar doubles: Array<Double> = [Double]()\nvar strings: [String] = [String]()\nvar characters: [Character] = []\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Dictionary : 키와 값의 쌍으로 이뤄진 컬렉션`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var anyDictionary: Dictionary<String, Any> = [String: Any]()\nanyDictionary[\"someKey\"] = \"value\"\nanyDictionary[\"anotherKey\"] = 100\n\nanyDictionary.removeValue(forKey:\"anotherKey\") // 100\nanyDictionary[\"someKey\"] = nil\nanyDictionary // [:]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Set : 순서가 없고, 멤버가 유일한 컬렉션`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var integerSet: Set<Int> = Set<Int>()\nintegerSet.insert(1)\nintegerSet.insert(1)\nintegerSet.insert(1)\nintegerSet.insert(2)\nintegerSet.insert(3)\nintegerSet  // {1,2,3}\n\nintegerSet.contain(1) // true\n\nintegerSet.count            // 3\n\nintegerSet.remove(100)\nintegerSet.removeFirst()\n\n\n`}</code></pre>\n    <h3>{`함수`}</h3>\n    <h4>{`함수 선언`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func sum(a: Int, b: Int) -> Int {\n  return a+b\n}\n\nfunc printName(name: String) -> Void {\n  print(name)\n}\n\nsum(a: 3,b:5) // 8\n`}</code></pre>\n    <h4>{`기본값을 가지는 함수`}</h4>\n    <p>{`기본값을 가지는 매개변수는 마지막에 둬야`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func greeting(friend: String, me: String=\"Tom\"){\n  print(\"hello \\\\(friend)! I'm \\\\(me)\")\n}\n`}</code></pre>\n    <h4>{`전달인자`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`매개변수의 역할을 좀 더 명확하게 하거나`}</li>\n      <li parentName=\"ul\">{`사용자 입장에서 표현하고자 할 때 사용`}</li>\n      <li parentName=\"ul\">{`오버로딩 역할 가능`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func greeting(to friend: String, from me: String=\"Tom\"){\n  print(\"hello \\\\(friend)! I'm \\\\(me)\")\n}\n`}</code></pre>\n    <h4>{`가변매개변수`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func sayHelloToFriends(me: String, friends: String...) -> String {\n  return \"Hello \\\\(friends)! I'm \\\\(me)\"\n}\n\nprint(sayHelloToFriends(me: \"Tom\", friends: \"Jack\", \"eric\", \"wing\"))\n`}</code></pre>\n    <p>{`스위프트는 함수형 패러다임을 포함하는 다중 패러다임 언어`}</p>\n    <p>{`스위프트의 함수는 일급객체이므로 변수, 상수 등에 저장이 가능하고 매개변수로 전달도 가능`}</p>\n    <h3>{`조건문`}</h3>\n    <h4>{`if else`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`소괄호는 생략가능하지만 중괄호는 생략 불가`}</li>\n      <li parentName=\"ul\">{`조건문은 항상 Bool 타입이 와야 함`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`if condition {\n  ...\n} else {\n  ...\n}\n`}</code></pre>\n    <h4>{`switch`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Default는 반드시 작성할 것`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`break`}</inlineCode>{` 문을 사용하지 않음. 굳이 사용하겠다면 `}<inlineCode parentName=\"li\">{`fallthrough`}</inlineCode></li>\n    </ul>\n    <h3>{`반복문`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var integers = [1,2,3]\nlet dictionary = [\"a\":1,\"b\":2,\"c\":3]\n`}</code></pre>\n    <h4>{`for ... in`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`for integer in integers {\n  print(integer)\n}\n\nfor (char,num) in dictionary {\n  print(\"\\\\(char): \\\\(num)\")\n}\n`}</code></pre>\n    <h4>{`while`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`while integers.count > 1 {\n  integers.removeLast()\n}\n`}</code></pre>\n    <h4>{`repeat-while`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`repeat {\n  integers.removeLast()\n} while integers.count > 0\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`do while과 같은 형태`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`do`}</inlineCode>{` 는 스위프트에서의 오류처리 키워드`}</li>\n    </ul>\n    <h3>{`옵셔널`}</h3>\n    <p>{`값이 있을 수도 있고 없을 수도 있는 것.\n`}<inlineCode parentName=\"p\">{`nil`}</inlineCode>{` 가능성을 문서화 하지 않아도 코드만으로 충분히 표현가능. 옵셔널이 아니라면 `}<inlineCode parentName=\"p\">{`nil`}</inlineCode>{` 체크를 안 해도 안심`}</p>\n    <p>{`옵셔널은 열거형 + 제너럴의 형태`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`enum Optional<Wrapped> : ExpressibleByNilLiteral {\n  case none\n  case some(Wrapped)\n}\n\nlet optionalValue: Optional<Int> = nil\nlet optionalValue: Int? = nil\n`}</code></pre>\n    <h5>{`!`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var optionaleVaue: Int! = 100\n\nswitch optionalValue { \n  case .none:\n    print(\"This Optional variable is nill\")\n  case .some(let value):\n    print(\"Value is \\\\(value)\")\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Inmplicitly Unwrapped Optional (암시적 추출 옵셔널) `}</li>\n      <li parentName=\"ul\">{`기존 변수처럼 사용 가능`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nil`}</inlineCode>{` 할당 가능`}</li>\n    </ul>\n    <h5>{`?`}</h5>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nil`}</inlineCode>{` 할당 가능`}</li>\n      <li parentName=\"ul\">{`기존 변수처럼 사용 불가 - 옵셔널과 일반 값은 다른 타입이므로 연산 불가`}</li>\n    </ul>\n    <h4>{`Optional Unwrapping`}</h4>\n    <h5>{`Optional Binding`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func printName(name: String) {\n  print(name)\n}\nvar myName: String! = nil\n\nif let name: String = myName {\n  printName(name)\n} else {\n  print(\"myName == nil\")\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`if-let`}</inlineCode>{` 을 이용하여 `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` 에 `}<inlineCode parentName=\"p\">{`myName`}</inlineCode>{` 을 바인딩하여 사용\n`}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` 은 `}<inlineCode parentName=\"p\">{`if-let`}</inlineCode>{` 구문 내에서만 사용 가능`}</p>\n    <h5>{`Force Unwrapping`}</h5>\n    <p>{`옵셔널의 값을 강제로 추출. 비추 방식`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var myName2: String? = \"optional\"\nprintName(myName2!) // !를 붙어 강제 추출\n\nmyName2 = nil\nprint(myName!)\n// 강제추출 시 값이 없으므로 런타임 오류 발생\n\nvar yourName: String! = nil\nprintName(yourName)\n// 암시적 추출 옵셔널을 붙이면 알아서 변수뒤에 !를 붙임\n// nil값이 전달되기 떄문에 런타임 오류 발생\n`}</code></pre>\n    <h3>{`구조체`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`struct Sample {\n  var mutableProperty: Int = 100 // 가변 프로퍼티\n  let immutableProperty: Int = 100 // 불변 프로퍼티\n  \n  static var typeProperty: Int = 100 // 타입 프로퍼티\n  \n  // 인스턴스 메서드\n  func instanceMethod() {\n    print(\"instance method\")\n  }\n  // 타입 메서드\n  static func typeMethod() {\n    print(\"type method\")\n  }\n}\n\n// 가변 인스턴스, 가변프로퍼티만 변경 가능\nvar mutable: Sample = Sample()\n\n// 불변 인스턴스, 어떤 프로퍼티도 변경 불가\nlet immutable: Sample = Sample()\n\nSample.typeMethod() // type method\n`}</code></pre>\n    <h3>{`클래스`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`구조체와 굉장히 유사하지만 구조체는 값 타입이고, 클래스는 참조 타입이다`}</li>\n      <li parentName=\"ul\">{`다중 상속이 되지 않음`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`class Sample {\n  var mutableProperty: Int = 100 // 가변 프로퍼티\n  let immutableProperty: Int = 100 // 불변 프로퍼티\n  \n  static var typeProperty: Int = 100 // 타입 프로퍼티\n  \n  // 인스턴스 메서드\n  func instanceMethod() {\n    print(\"instance method\")\n  }\n  // 타입 메서드\n  // 재정의 불가 타입 메서드 - static\n  static func typeMethod() {\n    print(\"type method -static\")\n  }\n  // 재정의 가능 타입 메서드 - class\n  class func classMethod() {\n    print(\"type method -class\")\n  }\n}\n`}</code></pre>\n    <p>{`불변 인스턴스로 생성을 해도 가변프로퍼티 변경 가능`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}