{"expireTime":9007200852499542000,"key":"gatsby-plugin-mdx-entire-payload-ac167eae6f929957079c0ed6aeee2bf5-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"배열로 유연한 컬렉션을 생성하라","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":22,"offset":22},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":22,"offset":22},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"배열에 이터러블(iterable)이 내장되어 있다. \niterable은 컬렉션의 현재 위치를 알고 있는 상태에서 컬렉션의 항목을 한 번에 하나씩 처리하는 방법.\n문자열, Object.keys( )를 이용해 이터러블로 변환할 수 있는 데이터 형식이라면 배열에 수행하는 모든 동작을 동일하게 실행할 수 있음","position":{"start":{"line":4,"column":1,"offset":24},"end":{"line":6,"column":80,"offset":193},"indent":[1,1]}}],"position":{"start":{"line":4,"column":1,"offset":24},"end":{"line":6,"column":80,"offset":193},"indent":[1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Object.keys( )","position":{"start":{"line":8,"column":8,"offset":202},"end":{"line":8,"column":22,"offset":216},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":195},"end":{"line":8,"column":22,"offset":216},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// simple array\nconst arr = ['a', 'b', 'c'];\nconsole.log(Object.keys(arr)); // console: ['0', '1', '2']\n\n// array-like object\nconst obj = { 0: 'a', 1: 'b', 2: 'c' };\nconsole.log(Object.keys(obj)); // console: ['0', '1', '2']\n\n// array-like object with random key ordering\nconst anObj = { 100: 'a', 2: 'b', 7: 'c' };\nconsole.log(Object.keys(anObj)); // console: ['2', '7', '100']","position":{"start":{"line":10,"column":1,"offset":218},"end":{"line":22,"column":4,"offset":614},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/keys","children":[{"type":"text","value":"Object.keys","position":{"start":{"line":24,"column":2,"offset":617},"end":{"line":24,"column":13,"offset":628},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":616},"end":{"line":24,"column":105,"offset":720},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":616},"end":{"line":24,"column":105,"offset":720},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"컬렉션 개념의 거의 대부분을 배열형태로 표현가능","position":{"start":{"line":26,"column":1,"offset":722},"end":{"line":26,"column":27,"offset":748},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":722},"end":{"line":26,"column":27,"offset":748},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Object.entries( )","position":{"start":{"line":28,"column":8,"offset":757},"end":{"line":28,"column":25,"offset":774},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":750},"end":{"line":28,"column":25,"offset":774},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const obj = { foo: 'bar', baz: 42 };\nconsole.log(Object.entries(obj)); // [ ['foo', 'bar'], ['baz', 42] ]\n\n// array like object\nconst obj = { 0: 'a', 1: 'b', 2: 'c' };\nconsole.log(Object.entries(obj)); // [ ['0', 'a'], ['1', 'b'], ['2', 'c'] ]\n\n// array like object with random key ordering\nconst anObj = { 100: 'a', 2: 'b', 7: 'c' };\nconsole.log(Object.entries(anObj)); // [ ['2', 'b'], ['7', 'c'], ['100', 'a'] ]","position":{"start":{"line":30,"column":1,"offset":776},"end":{"line":41,"column":4,"offset":1208},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/entries","children":[{"type":"text","value":"Object.entries","position":{"start":{"line":43,"column":2,"offset":1211},"end":{"line":43,"column":16,"offset":1225},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1210},"end":{"line":43,"column":111,"offset":1320},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1210},"end":{"line":43,"column":111,"offset":1320},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":45,"column":1,"offset":1322},"end":{"line":45,"column":4,"offset":1325},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Includes( )로 존재 여부를 확인하라","position":{"start":{"line":47,"column":5,"offset":1331},"end":{"line":47,"column":29,"offset":1355},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1327},"end":{"line":47,"column":29,"offset":1355},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const sections = ['shiping'];\n\nfunction displayShiping(sections) {\n  if(sections.indexOf('shiping')) { // 인덱스가 0이므로 거짓으로 판단\n    return true;\n  }\n  return false;\n} // false","position":{"start":{"line":49,"column":1,"offset":1357},"end":{"line":58,"column":4,"offset":1546},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"indexOf는 해당 값의 인덱스 위치를 반환한다. 없으면 -1을 반환한다.  그 점에 유의하여야 함","position":{"start":{"line":60,"column":1,"offset":1548},"end":{"line":60,"column":57,"offset":1604},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1548},"end":{"line":60,"column":57,"offset":1604},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const sections = ['shiping'];\n\nfunction displayShiping(sections) {\n  return sections.indexOf('shiping')>-1\n} // true;","position":{"start":{"line":62,"column":1,"offset":1606},"end":{"line":68,"column":4,"offset":1741},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"존재 여부에 대한 true, false의 값을 받기위해서는 includes( )를 이용한다","position":{"start":{"line":72,"column":1,"offset":1745},"end":{"line":72,"column":51,"offset":1795},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1745},"end":{"line":72,"column":51,"offset":1795},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const sections = ['shiping'];\n\nfunction displayShiping(sections) {\n  return sections.includes('shiping');\n}","position":{"start":{"line":74,"column":1,"offset":1797},"end":{"line":80,"column":4,"offset":1922},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":82,"column":1,"offset":1924},"end":{"line":82,"column":4,"offset":1927},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"펼침 연산자로 배열을 본떠라","position":{"start":{"line":84,"column":5,"offset":1933},"end":{"line":84,"column":20,"offset":1948},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":1929},"end":{"line":84,"column":20,"offset":1948},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const cart = ['Naming and Necessity', 'Alice in Wonderland'];\n\nconst copyCart = [...cart];","position":{"start":{"line":86,"column":1,"offset":1950},"end":{"line":90,"column":4,"offset":2058},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"펼침 연산자의 장점은 데이터의 조작이 없음.\n읽기 쉽고 간결함\n재사용할 수 있으며 예측이 가능함","position":{"start":{"line":92,"column":1,"offset":2060},"end":{"line":94,"column":19,"offset":2113},"indent":[1,1]}}],"position":{"start":{"line":92,"column":1,"offset":2060},"end":{"line":94,"column":19,"offset":2113},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"function myFunction(a,b,c){\n  return a+b+c;\n}\n\nconst arr = [1,2,3];\nconsole.log(myFunction(...arr));","position":{"start":{"line":96,"column":1,"offset":2115},"end":{"line":103,"column":4,"offset":2233},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"함수의 매개변수로 전달가능","position":{"start":{"line":105,"column":1,"offset":2235},"end":{"line":105,"column":15,"offset":2249},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2235},"end":{"line":105,"column":15,"offset":2249},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":107,"column":1,"offset":2251},"end":{"line":107,"column":4,"offset":2254},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"push( ) 메서드 대신 펼침 연산자로 원본 변경을 피하라","position":{"start":{"line":109,"column":5,"offset":2260},"end":{"line":109,"column":38,"offset":2293},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":2256},"end":{"line":109,"column":38,"offset":2293},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const arr = [1,2,3,4];\n\nconst ret = [...arr, 5];\narr.push(5);\n\nconsole.log(ret); // [1,2,3,4,5]\nconsole.log(arr); // [1,2,3,4,5]","position":{"start":{"line":111,"column":1,"offset":2295},"end":{"line":119,"column":4,"offset":2441},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"펼침연산자를 이용하면 원본 데이터의 조작없이 데이터 추가한 새로운 배열 생성이 가능하다","position":{"start":{"line":121,"column":1,"offset":2443},"end":{"line":121,"column":49,"offset":2491},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2443},"end":{"line":121,"column":49,"offset":2491},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const arr = [1,2,3];\nconst ret = [0,...arr]; // ret : [0,1,2,3]. arr : [1,2,3]\narr.shift(0); // arr : [0,1,2,3]","position":{"start":{"line":123,"column":1,"offset":2493},"end":{"line":127,"column":4,"offset":2622},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"중괄호에 명확하게 어떤 값이 반환되는지 보임으로써 배열을 반환하려는 의도를 표현할 수 있다.","position":{"start":{"line":129,"column":1,"offset":2624},"end":{"line":129,"column":52,"offset":2675},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2624},"end":{"line":129,"column":52,"offset":2675},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":131,"column":1,"offset":2677},"end":{"line":131,"column":4,"offset":2680},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"펼침 연산자로 정렬에 의한 혼란을 피하라","position":{"start":{"line":133,"column":5,"offset":2686},"end":{"line":133,"column":27,"offset":2708},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":2682},"end":{"line":133,"column":27,"offset":2708},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"sort( ) 함수는 원본 배열을 조작한다.","position":{"start":{"line":135,"column":1,"offset":2710},"end":{"line":135,"column":25,"offset":2734},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2710},"end":{"line":135,"column":25,"offset":2734},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"그럴떄는 펼침연산자로 사본을 만들어 정렬하면 된다","position":{"start":{"line":137,"column":1,"offset":2736},"end":{"line":137,"column":28,"offset":2763},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":2736},"end":{"line":137,"column":28,"offset":2763},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"sort","position":{"start":{"line":139,"column":8,"offset":2772},"end":{"line":139,"column":12,"offset":2776},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2765},"end":{"line":139,"column":12,"offset":2776},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"arr.sort([compareFunction]);","position":{"start":{"line":141,"column":1,"offset":2778},"end":{"line":143,"column":4,"offset":2824},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"compareFunction","position":{"start":{"line":145,"column":1,"offset":2826},"end":{"line":145,"column":18,"offset":2843},"indent":[]}},{"type":"text","value":"이 없으면 배열의 요소를 문자열로 변환해서 유니코드 포인트 오름차순으로 정렬한다.","position":{"start":{"line":145,"column":18,"offset":2843},"end":{"line":145,"column":63,"offset":2888},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":2826},"end":{"line":145,"column":63,"offset":2888},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"compareFunction","position":{"start":{"line":147,"column":1,"offset":2890},"end":{"line":147,"column":18,"offset":2907},"indent":[]}},{"type":"text","value":"이 제공되면 배열 요소는 compare 함수의 반환 값에 따라 정렬됩니다. a와 b가 비교되는 두 요소라면,","position":{"start":{"line":147,"column":18,"offset":2907},"end":{"line":147,"column":78,"offset":2967},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":2890},"end":{"line":147,"column":78,"offset":2967},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"compareFunction(a, b) < 0","position":{"start":{"line":149,"column":3,"offset":2971},"end":{"line":149,"column":30,"offset":2998},"indent":[]}},{"type":"break","position":{"start":{"line":149,"column":30,"offset":2998},"end":{"line":150,"column":3,"offset":3003},"indent":[3]}},{"type":"text","value":": a가 먼저 오게 정렬","position":{"start":{"line":150,"column":3,"offset":3003},"end":{"line":150,"column":16,"offset":3016},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":2971},"end":{"line":150,"column":16,"offset":3016},"indent":[3]}}],"position":{"start":{"line":149,"column":1,"offset":2969},"end":{"line":150,"column":16,"offset":3016},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"compareFunction(a, b) > 0","position":{"start":{"line":151,"column":3,"offset":3019},"end":{"line":151,"column":30,"offset":3046},"indent":[]}},{"type":"text","value":"\n: b가 먼저 오게 정렬","position":{"start":{"line":151,"column":30,"offset":3046},"end":{"line":152,"column":16,"offset":3062},"indent":[3]}}],"position":{"start":{"line":151,"column":3,"offset":3019},"end":{"line":152,"column":16,"offset":3062},"indent":[3]}}],"position":{"start":{"line":151,"column":1,"offset":3017},"end":{"line":152,"column":16,"offset":3062},"indent":[1]}}],"position":{"start":{"line":149,"column":1,"offset":2969},"end":{"line":152,"column":16,"offset":3062},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort","children":[{"type":"text","value":"sort","position":{"start":{"line":154,"column":2,"offset":3065},"end":{"line":154,"column":6,"offset":3069},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":3064},"end":{"line":154,"column":97,"offset":3160},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":3064},"end":{"line":154,"column":97,"offset":3160},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"<자바스크립트 코딩의 기술> ch2\",\"date\":\"2020-08-02T00:00:00.000Z\",\"tags\":[\"JS\"]}","position":{"start":{"line":158,"column":1,"offset":3164},"end":{"line":158,"column":108,"offset":3271},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":158,"column":108,"offset":3271}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"<자바스크립트 코딩의 기술> ch2\",\n  \"date\": \"2020-08-02T00:00:00.000Z\",\n  \"tags\": [\"JS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uBC30\\uC5F4\\uB85C \\uC720\\uC5F0\\uD55C \\uCEEC\\uB809\\uC158\\uC744 \\uC0DD\\uC131\\uD558\\uB77C\"), mdx(\"p\", null, \"\\uBC30\\uC5F4\\uC5D0 \\uC774\\uD130\\uB7EC\\uBE14(iterable)\\uC774 \\uB0B4\\uC7A5\\uB418\\uC5B4 \\uC788\\uB2E4.\\niterable\\uC740 \\uCEEC\\uB809\\uC158\\uC758 \\uD604\\uC7AC \\uC704\\uCE58\\uB97C \\uC54C\\uACE0 \\uC788\\uB294 \\uC0C1\\uD0DC\\uC5D0\\uC11C \\uCEEC\\uB809\\uC158\\uC758 \\uD56D\\uBAA9\\uC744 \\uD55C \\uBC88\\uC5D0 \\uD558\\uB098\\uC529 \\uCC98\\uB9AC\\uD558\\uB294 \\uBC29\\uBC95.\\n\\uBB38\\uC790\\uC5F4, Object.keys( )\\uB97C \\uC774\\uC6A9\\uD574 \\uC774\\uD130\\uB7EC\\uBE14\\uB85C \\uBCC0\\uD658\\uD560 \\uC218 \\uC788\\uB294 \\uB370\\uC774\\uD130 \\uD615\\uC2DD\\uC774\\uB77C\\uBA74 \\uBC30\\uC5F4\\uC5D0 \\uC218\\uD589\\uD558\\uB294 \\uBAA8\\uB4E0 \\uB3D9\\uC791\\uC744 \\uB3D9\\uC77C\\uD558\\uAC8C \\uC2E4\\uD589\\uD560 \\uC218 \\uC788\\uC74C\"), mdx(\"h6\", null, \"Object.keys( )\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// simple array\\nconst arr = ['a', 'b', 'c'];\\nconsole.log(Object.keys(arr)); // console: ['0', '1', '2']\\n\\n// array-like object\\nconst obj = { 0: 'a', 1: 'b', 2: 'c' };\\nconsole.log(Object.keys(obj)); // console: ['0', '1', '2']\\n\\n// array-like object with random key ordering\\nconst anObj = { 100: 'a', 2: 'b', 7: 'c' };\\nconsole.log(Object.keys(anObj)); // console: ['2', '7', '100']\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"\n  }), \"Object.keys\")), mdx(\"p\", null, \"\\uCEEC\\uB809\\uC158 \\uAC1C\\uB150\\uC758 \\uAC70\\uC758 \\uB300\\uBD80\\uBD84\\uC744 \\uBC30\\uC5F4\\uD615\\uD0DC\\uB85C \\uD45C\\uD604\\uAC00\\uB2A5\"), mdx(\"h6\", null, \"Object.entries( )\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const obj = { foo: 'bar', baz: 42 };\\nconsole.log(Object.entries(obj)); // [ ['foo', 'bar'], ['baz', 42] ]\\n\\n// array like object\\nconst obj = { 0: 'a', 1: 'b', 2: 'c' };\\nconsole.log(Object.entries(obj)); // [ ['0', 'a'], ['1', 'b'], ['2', 'c'] ]\\n\\n// array like object with random key ordering\\nconst anObj = { 100: 'a', 2: 'b', 7: 'c' };\\nconsole.log(Object.entries(anObj)); // [ ['2', 'b'], ['7', 'c'], ['100', 'a'] ]\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"\n  }), \"Object.entries\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Includes( )\\uB85C \\uC874\\uC7AC \\uC5EC\\uBD80\\uB97C \\uD655\\uC778\\uD558\\uB77C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const sections = ['shiping'];\\n\\nfunction displayShiping(sections) {\\n  if(sections.indexOf('shiping')) { // \\uC778\\uB371\\uC2A4\\uAC00 0\\uC774\\uBBC0\\uB85C \\uAC70\\uC9D3\\uC73C\\uB85C \\uD310\\uB2E8\\n    return true;\\n  }\\n  return false;\\n} // false\\n\")), mdx(\"p\", null, \"indexOf\\uB294 \\uD574\\uB2F9 \\uAC12\\uC758 \\uC778\\uB371\\uC2A4 \\uC704\\uCE58\\uB97C \\uBC18\\uD658\\uD55C\\uB2E4. \\uC5C6\\uC73C\\uBA74 -1\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.  \\uADF8 \\uC810\\uC5D0 \\uC720\\uC758\\uD558\\uC5EC\\uC57C \\uD568\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const sections = ['shiping'];\\n\\nfunction displayShiping(sections) {\\n  return sections.indexOf('shiping')>-1\\n} // true;\\n\")), mdx(\"p\", null, \"\\uC874\\uC7AC \\uC5EC\\uBD80\\uC5D0 \\uB300\\uD55C true, false\\uC758 \\uAC12\\uC744 \\uBC1B\\uAE30\\uC704\\uD574\\uC11C\\uB294 includes( )\\uB97C \\uC774\\uC6A9\\uD55C\\uB2E4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const sections = ['shiping'];\\n\\nfunction displayShiping(sections) {\\n  return sections.includes('shiping');\\n}\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"\\uD3BC\\uCE68 \\uC5F0\\uC0B0\\uC790\\uB85C \\uBC30\\uC5F4\\uC744 \\uBCF8\\uB5A0\\uB77C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const cart = ['Naming and Necessity', 'Alice in Wonderland'];\\n\\nconst copyCart = [...cart];\\n\")), mdx(\"p\", null, \"\\uD3BC\\uCE68 \\uC5F0\\uC0B0\\uC790\\uC758 \\uC7A5\\uC810\\uC740 \\uB370\\uC774\\uD130\\uC758 \\uC870\\uC791\\uC774 \\uC5C6\\uC74C.\\n\\uC77D\\uAE30 \\uC27D\\uACE0 \\uAC04\\uACB0\\uD568\\n\\uC7AC\\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC73C\\uBA70 \\uC608\\uCE21\\uC774 \\uAC00\\uB2A5\\uD568\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function myFunction(a,b,c){\\n  return a+b+c;\\n}\\n\\nconst arr = [1,2,3];\\nconsole.log(myFunction(...arr));\\n\")), mdx(\"p\", null, \"\\uD568\\uC218\\uC758 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uB85C \\uC804\\uB2EC\\uAC00\\uB2A5\"), mdx(\"hr\", null), mdx(\"h3\", null, \"push( ) \\uBA54\\uC11C\\uB4DC \\uB300\\uC2E0 \\uD3BC\\uCE68 \\uC5F0\\uC0B0\\uC790\\uB85C \\uC6D0\\uBCF8 \\uBCC0\\uACBD\\uC744 \\uD53C\\uD558\\uB77C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const arr = [1,2,3,4];\\n\\nconst ret = [...arr, 5];\\narr.push(5);\\n\\nconsole.log(ret); // [1,2,3,4,5]\\nconsole.log(arr); // [1,2,3,4,5]\\n\")), mdx(\"p\", null, \"\\uD3BC\\uCE68\\uC5F0\\uC0B0\\uC790\\uB97C \\uC774\\uC6A9\\uD558\\uBA74 \\uC6D0\\uBCF8 \\uB370\\uC774\\uD130\\uC758 \\uC870\\uC791\\uC5C6\\uC774 \\uB370\\uC774\\uD130 \\uCD94\\uAC00\\uD55C \\uC0C8\\uB85C\\uC6B4 \\uBC30\\uC5F4 \\uC0DD\\uC131\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const arr = [1,2,3];\\nconst ret = [0,...arr]; // ret : [0,1,2,3]. arr : [1,2,3]\\narr.shift(0); // arr : [0,1,2,3]\\n\")), mdx(\"p\", null, \"\\uC911\\uAD04\\uD638\\uC5D0 \\uBA85\\uD655\\uD558\\uAC8C \\uC5B4\\uB5A4 \\uAC12\\uC774 \\uBC18\\uD658\\uB418\\uB294\\uC9C0 \\uBCF4\\uC784\\uC73C\\uB85C\\uC368 \\uBC30\\uC5F4\\uC744 \\uBC18\\uD658\\uD558\\uB824\\uB294 \\uC758\\uB3C4\\uB97C \\uD45C\\uD604\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"hr\", null), mdx(\"h3\", null, \"\\uD3BC\\uCE68 \\uC5F0\\uC0B0\\uC790\\uB85C \\uC815\\uB82C\\uC5D0 \\uC758\\uD55C \\uD63C\\uB780\\uC744 \\uD53C\\uD558\\uB77C\"), mdx(\"p\", null, \"sort( ) \\uD568\\uC218\\uB294 \\uC6D0\\uBCF8 \\uBC30\\uC5F4\\uC744 \\uC870\\uC791\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uADF8\\uB7F4\\uB584\\uB294 \\uD3BC\\uCE68\\uC5F0\\uC0B0\\uC790\\uB85C \\uC0AC\\uBCF8\\uC744 \\uB9CC\\uB4E4\\uC5B4 \\uC815\\uB82C\\uD558\\uBA74 \\uB41C\\uB2E4\"), mdx(\"h6\", null, \"sort\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"arr.sort([compareFunction]);\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compareFunction\"), \"\\uC774 \\uC5C6\\uC73C\\uBA74 \\uBC30\\uC5F4\\uC758 \\uC694\\uC18C\\uB97C \\uBB38\\uC790\\uC5F4\\uB85C \\uBCC0\\uD658\\uD574\\uC11C \\uC720\\uB2C8\\uCF54\\uB4DC \\uD3EC\\uC778\\uD2B8 \\uC624\\uB984\\uCC28\\uC21C\\uC73C\\uB85C \\uC815\\uB82C\\uD55C\\uB2E4.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compareFunction\"), \"\\uC774 \\uC81C\\uACF5\\uB418\\uBA74 \\uBC30\\uC5F4 \\uC694\\uC18C\\uB294 compare \\uD568\\uC218\\uC758 \\uBC18\\uD658 \\uAC12\\uC5D0 \\uB530\\uB77C \\uC815\\uB82C\\uB429\\uB2C8\\uB2E4. a\\uC640 b\\uAC00 \\uBE44\\uAD50\\uB418\\uB294 \\uB450 \\uC694\\uC18C\\uB77C\\uBA74,\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"compareFunction(a, b) < 0\"), mdx(\"br\", {\n    parentName: \"li\"\n  }), \": a\\uAC00 \\uBA3C\\uC800 \\uC624\\uAC8C \\uC815\\uB82C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"compareFunction(a, b) > 0\"), \"\\n: b\\uAC00 \\uBA3C\\uC800 \\uC624\\uAC8C \\uC815\\uB82C\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"\n  }), \"sort\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"<자바스크립트 코딩의 기술> ch2\",\n  \"date\": \"2020-08-02T00:00:00.000Z\",\n  \"tags\": [\"JS\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`배열로 유연한 컬렉션을 생성하라`}</h3>\n    <p>{`배열에 이터러블(iterable)이 내장되어 있다.\niterable은 컬렉션의 현재 위치를 알고 있는 상태에서 컬렉션의 항목을 한 번에 하나씩 처리하는 방법.\n문자열, Object.keys( )를 이용해 이터러블로 변환할 수 있는 데이터 형식이라면 배열에 수행하는 모든 동작을 동일하게 실행할 수 있음`}</p>\n    <h6>{`Object.keys( )`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// simple array\nconst arr = ['a', 'b', 'c'];\nconsole.log(Object.keys(arr)); // console: ['0', '1', '2']\n\n// array-like object\nconst obj = { 0: 'a', 1: 'b', 2: 'c' };\nconsole.log(Object.keys(obj)); // console: ['0', '1', '2']\n\n// array-like object with random key ordering\nconst anObj = { 100: 'a', 2: 'b', 7: 'c' };\nconsole.log(Object.keys(anObj)); // console: ['2', '7', '100']\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"\n      }}>{`Object.keys`}</a></p>\n    <p>{`컬렉션 개념의 거의 대부분을 배열형태로 표현가능`}</p>\n    <h6>{`Object.entries( )`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const obj = { foo: 'bar', baz: 42 };\nconsole.log(Object.entries(obj)); // [ ['foo', 'bar'], ['baz', 42] ]\n\n// array like object\nconst obj = { 0: 'a', 1: 'b', 2: 'c' };\nconsole.log(Object.entries(obj)); // [ ['0', 'a'], ['1', 'b'], ['2', 'c'] ]\n\n// array like object with random key ordering\nconst anObj = { 100: 'a', 2: 'b', 7: 'c' };\nconsole.log(Object.entries(anObj)); // [ ['2', 'b'], ['7', 'c'], ['100', 'a'] ]\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"\n      }}>{`Object.entries`}</a></p>\n    <hr></hr>\n    <h3>{`Includes( )로 존재 여부를 확인하라`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const sections = ['shiping'];\n\nfunction displayShiping(sections) {\n  if(sections.indexOf('shiping')) { // 인덱스가 0이므로 거짓으로 판단\n    return true;\n  }\n  return false;\n} // false\n`}</code></pre>\n    <p>{`indexOf는 해당 값의 인덱스 위치를 반환한다. 없으면 -1을 반환한다.  그 점에 유의하여야 함`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const sections = ['shiping'];\n\nfunction displayShiping(sections) {\n  return sections.indexOf('shiping')>-1\n} // true;\n`}</code></pre>\n    <p>{`존재 여부에 대한 true, false의 값을 받기위해서는 includes( )를 이용한다`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const sections = ['shiping'];\n\nfunction displayShiping(sections) {\n  return sections.includes('shiping');\n}\n`}</code></pre>\n    <hr></hr>\n    <h3>{`펼침 연산자로 배열을 본떠라`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const cart = ['Naming and Necessity', 'Alice in Wonderland'];\n\nconst copyCart = [...cart];\n`}</code></pre>\n    <p>{`펼침 연산자의 장점은 데이터의 조작이 없음.\n읽기 쉽고 간결함\n재사용할 수 있으며 예측이 가능함`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function myFunction(a,b,c){\n  return a+b+c;\n}\n\nconst arr = [1,2,3];\nconsole.log(myFunction(...arr));\n`}</code></pre>\n    <p>{`함수의 매개변수로 전달가능`}</p>\n    <hr></hr>\n    <h3>{`push( ) 메서드 대신 펼침 연산자로 원본 변경을 피하라`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const arr = [1,2,3,4];\n\nconst ret = [...arr, 5];\narr.push(5);\n\nconsole.log(ret); // [1,2,3,4,5]\nconsole.log(arr); // [1,2,3,4,5]\n`}</code></pre>\n    <p>{`펼침연산자를 이용하면 원본 데이터의 조작없이 데이터 추가한 새로운 배열 생성이 가능하다`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const arr = [1,2,3];\nconst ret = [0,...arr]; // ret : [0,1,2,3]. arr : [1,2,3]\narr.shift(0); // arr : [0,1,2,3]\n`}</code></pre>\n    <p>{`중괄호에 명확하게 어떤 값이 반환되는지 보임으로써 배열을 반환하려는 의도를 표현할 수 있다.`}</p>\n    <hr></hr>\n    <h3>{`펼침 연산자로 정렬에 의한 혼란을 피하라`}</h3>\n    <p>{`sort( ) 함수는 원본 배열을 조작한다.`}</p>\n    <p>{`그럴떄는 펼침연산자로 사본을 만들어 정렬하면 된다`}</p>\n    <h6>{`sort`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`arr.sort([compareFunction]);\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`compareFunction`}</inlineCode>{`이 없으면 배열의 요소를 문자열로 변환해서 유니코드 포인트 오름차순으로 정렬한다.`}</p>\n    <p><inlineCode parentName=\"p\">{`compareFunction`}</inlineCode>{`이 제공되면 배열 요소는 compare 함수의 반환 값에 따라 정렬됩니다. a와 b가 비교되는 두 요소라면,`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`compareFunction(a, b) < 0`}</inlineCode><br parentName=\"li\"></br>\n        {`: a가 먼저 오게 정렬`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`compareFunction(a, b) > 0`}</inlineCode>{`\n: b가 먼저 오게 정렬`}</li>\n    </ul>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"\n      }}>{`sort`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}