{"expireTime":9007200852250421000,"key":"gatsby-plugin-mdx-entire-payload-8b99d407e4e0aabe33f8553828604497-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"화살표 함수로 반복문을 단순하게 만들어라","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":27,"offset":27},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":27,"offset":27},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function capitalize(name) { // 기명함수\n  return name[0].toUpperCase() + name.slice(1);\n}","position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":8,"column":4,"offset":132},"indent":[1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"const capitalize = name => name[0].toUpperCase() + name.slice(1);","position":{"start":{"line":10,"column":1,"offset":134},"end":{"line":12,"column":4,"offset":217},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":14,"column":1,"offset":219},"end":{"line":14,"column":4,"offset":222},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"배열 메서드로 반복문을 짧게 작성하라","position":{"start":{"line":16,"column":5,"offset":228},"end":{"line":16,"column":25,"offset":248},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":224},"end":{"line":16,"column":25,"offset":248},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"map( )\n형태를 바꿀 수 있지만 길이는 유지","position":{"start":{"line":18,"column":3,"offset":252},"end":{"line":19,"column":22,"offset":280},"indent":[3]}}],"position":{"start":{"line":18,"column":3,"offset":252},"end":{"line":19,"column":22,"offset":280},"indent":[3]}}],"position":{"start":{"line":18,"column":1,"offset":250},"end":{"line":19,"column":22,"offset":280},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"sort( )\n형태나 길이는 변경되지 않고 순서만 변경","position":{"start":{"line":20,"column":3,"offset":283},"end":{"line":21,"column":25,"offset":315},"indent":[3]}}],"position":{"start":{"line":20,"column":3,"offset":283},"end":{"line":21,"column":25,"offset":315},"indent":[3]}}],"position":{"start":{"line":20,"column":1,"offset":281},"end":{"line":21,"column":25,"offset":315},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"filter( )\n길이는 변경하지만 형태는 바꾸지 않음","position":{"start":{"line":22,"column":3,"offset":318},"end":{"line":23,"column":23,"offset":350},"indent":[3]}}],"position":{"start":{"line":22,"column":3,"offset":318},"end":{"line":23,"column":23,"offset":350},"indent":[3]}}],"position":{"start":{"line":22,"column":1,"offset":316},"end":{"line":23,"column":23,"offset":350},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"find( )\n배열을 반환하지 않음\n한 개의 데이터가 반환되고 형태는 바뀌지 않음","position":{"start":{"line":24,"column":3,"offset":353},"end":{"line":26,"column":28,"offset":402},"indent":[3,3]}}],"position":{"start":{"line":24,"column":3,"offset":353},"end":{"line":26,"column":28,"offset":402},"indent":[3,3]}}],"position":{"start":{"line":24,"column":1,"offset":351},"end":{"line":26,"column":28,"offset":402},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"forEach( )\n형태를 이용하지만 아무것도 반환하지 않음","position":{"start":{"line":27,"column":3,"offset":405},"end":{"line":28,"column":25,"offset":440},"indent":[3]}}],"position":{"start":{"line":27,"column":3,"offset":405},"end":{"line":28,"column":25,"offset":440},"indent":[3]}}],"position":{"start":{"line":27,"column":1,"offset":403},"end":{"line":28,"column":25,"offset":440},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"reduce( )\n길이와 형태를 바꾸는 것을 비롯해서 무엇이든 처리할 수 있음","position":{"start":{"line":29,"column":3,"offset":443},"end":{"line":30,"column":36,"offset":488},"indent":[3]}}],"position":{"start":{"line":29,"column":3,"offset":443},"end":{"line":30,"column":36,"offset":488},"indent":[3]}}],"position":{"start":{"line":29,"column":1,"offset":441},"end":{"line":30,"column":36,"offset":488},"indent":[1]}}],"position":{"start":{"line":18,"column":1,"offset":250},"end":{"line":30,"column":36,"offset":488},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":32,"column":1,"offset":490},"end":{"line":32,"column":4,"offset":493},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"map( ) 메서드로 비슷한 길이의 배열을 생성하라","position":{"start":{"line":34,"column":5,"offset":499},"end":{"line":34,"column":33,"offset":527},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":495},"end":{"line":34,"column":33,"offset":527},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"맵 함수는 \n입력한 배열의 정보 중 한 조각을 받아 새로운 값을 반환, \n정보의 일부를 반환, \n정보를 변형해서 새로운 값을 반환","position":{"start":{"line":36,"column":1,"offset":529},"end":{"line":39,"column":19,"offset":601},"indent":[1,1,1]}}],"position":{"start":{"line":36,"column":1,"offset":529},"end":{"line":39,"column":19,"offset":601},"indent":[1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"const band = [\n{\n  name:'corbett',instrument:'guitar',\n},\n{\n  name:'evan',instruement:'guitar',\n},\n{\n  name:'sean',instruement:'bass',\n},\n]","position":{"start":{"line":41,"column":1,"offset":603},"end":{"line":53,"column":4,"offset":760},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"function getInstrument(member){\n  return member.instrument;\n}\n\nconst instrument = [];\nfor (let i=0;i<band.length;i++){\n  const instrument = band[i].instrument;\n  instruments.push(instrument);\n}","position":{"start":{"line":55,"column":1,"offset":762},"end":{"line":65,"column":4,"offset":973},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"const instruments = band.map(getInstrument);\n// ['guitar','guitar','bass']\nconst instruments = band.map(member => member.instrument);","position":{"start":{"line":67,"column":1,"offset":975},"end":{"line":71,"column":4,"offset":1126},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":74,"column":1,"offset":1129},"end":{"line":74,"column":4,"offset":1132},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"filter( )와 find( )로 데이터의 부분집합을 생성하라","position":{"start":{"line":76,"column":5,"offset":1138},"end":{"line":76,"column":40,"offset":1173},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1134},"end":{"line":76,"column":40,"offset":1173},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"filter","position":{"start":{"line":79,"column":8,"offset":1183},"end":{"line":79,"column":14,"offset":1189},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1176},"end":{"line":79,"column":14,"offset":1189},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const scores = [30,82,80,45];\nfunction getNumberOfPassingScores(scores) {\n  const passing = scores.filter(score => score > 59);\n  // [82,70]\n  return passing.length;\n}\n// 2","position":{"start":{"line":81,"column":1,"offset":1191},"end":{"line":89,"column":4,"offset":1381},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Filter 메서드는 항상 배열을 반환, 조건에 맞는 값이 없다고 하더라도 빈 배열을 반환함","position":{"start":{"line":91,"column":1,"offset":1383},"end":{"line":91,"column":52,"offset":1434},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":1383},"end":{"line":91,"column":52,"offset":1434},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"find","position":{"start":{"line":93,"column":8,"offset":1443},"end":{"line":93,"column":12,"offset":1447},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":1436},"end":{"line":93,"column":12,"offset":1447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"참 또는 거짓 값을 반환하는 함수를 인수로 받고, \n배열의 항목에 전달한 함수로 평가해 참 값을 반환하는 첫 번째 항목만 반환\n참 값을 반환하는 항목이 없다면 undefined 반환. 그러기 때문에 다낡평가를 이용해 기본값을 추가하는 것이 좋음","position":{"start":{"line":95,"column":1,"offset":1449},"end":{"line":97,"column":66,"offset":1585},"indent":[1,1]}}],"position":{"start":{"line":95,"column":1,"offset":1449},"end":{"line":97,"column":66,"offset":1585},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"const image = [{\n  path:'./me.jpg',\n  profile: false\n}];\nconst profile = images.find(image => image.profile) || {\n  path:'./default.jpg'\n};","position":{"start":{"line":99,"column":1,"offset":1587},"end":{"line":107,"column":4,"offset":1744},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":109,"column":1,"offset":1746},"end":{"line":109,"column":4,"offset":1749},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"forEach( )로 동일한 동작을 적용하라","position":{"start":{"line":111,"column":5,"offset":1755},"end":{"line":111,"column":29,"offset":1779},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":1751},"end":{"line":111,"column":29,"offset":1779},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"forEach의 경우 함수의 유효범위를 벗어나는 작업이 필요한 경우, 반드시 부수효과가 필요한 경우에 사용","position":{"start":{"line":113,"column":1,"offset":1781},"end":{"line":113,"column":60,"offset":1840},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":1781},"end":{"line":113,"column":60,"offset":1840},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"forEach의 장점은 체이닝 과정에서 다른 배열 메서드와 결합이 가능하고\n매번 변수에 배열 메서드의 결괏값을 저장할 필요없이 동일한 배열에서 여러 작업을 처리할 수 있음","position":{"start":{"line":115,"column":1,"offset":1842},"end":{"line":116,"column":54,"offset":1937},"indent":[1]}}],"position":{"start":{"line":115,"column":1,"offset":1842},"end":{"line":116,"column":54,"offset":1937},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"const names = ['walter','white'];\nconst capitalized1 = names.forEach(name => name.toUpperCase());\ncapitalized; // undefined\n\nlet capitalized2 = [];\nnames.forEach(name => capitalized.push(name.toUpperCase()));\ncapitalized; // ['WALTER','WHITE']","position":{"start":{"line":118,"column":1,"offset":1939},"end":{"line":126,"column":4,"offset":2200},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":128,"column":1,"offset":2202},"end":{"line":128,"column":4,"offset":2205},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"체이닝으로 메서드를 연결하라","position":{"start":{"line":130,"column":5,"offset":2211},"end":{"line":130,"column":20,"offset":2226},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2207},"end":{"line":130,"column":20,"offset":2226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"값을 다시 할당하지 않고 반환된 객체에 메서드를 즉시 호출하는 것","position":{"start":{"line":132,"column":1,"offset":2228},"end":{"line":132,"column":37,"offset":2264},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":2228},"end":{"line":132,"column":37,"offset":2264},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const sailors = [\n  {\n    name:'yi hong',\n    active : true,\n    email : 'yh@yhproductionds.io',\n  },\n  {\n    name:'alex',\n    active : true,\n    email : '',\n  },\n  {\n    name:'nathan',\n    active : false,\n    email : '',\n  },\n];\n\nsailors\n\t.filter(sailor => sailor.active)\n\t.map(sailor => sailor.email || `${sailor.name}@wiscsail.io`)\n\t.forEach(sailor => sendEmail(sailor));","position":{"start":{"line":134,"column":1,"offset":2266},"end":{"line":157,"column":4,"offset":2658},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"각 배열 메서드가 고유의 작업을 수행하기 때문에 코드를 한눈에 이해할 수 있음","position":{"start":{"line":159,"column":1,"offset":2660},"end":{"line":159,"column":44,"offset":2703},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":2660},"end":{"line":159,"column":44,"offset":2703},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"단점은 새로운 메서드를 호출할 때마다 반환된 배열 전체를 다시 반복함. 대규모 데이터를 다룰 때 고려해야...","position":{"start":{"line":161,"column":1,"offset":2705},"end":{"line":161,"column":62,"offset":2766},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":2705},"end":{"line":161,"column":62,"offset":2766},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"세미콜론은 맨 마지막에만 사용할 것\n호출되는 메서드에 대한 순서를 지켜야 함","position":{"start":{"line":163,"column":1,"offset":2768},"end":{"line":164,"column":23,"offset":2810},"indent":[1]}}],"position":{"start":{"line":163,"column":1,"offset":2768},"end":{"line":164,"column":23,"offset":2810},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":166,"column":1,"offset":2812},"end":{"line":166,"column":4,"offset":2815},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"reduce( )로 배열 데이터를 변환하라","position":{"start":{"line":168,"column":5,"offset":2821},"end":{"line":168,"column":28,"offset":2844},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":2817},"end":{"line":168,"column":28,"offset":2844},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const callback = function (collectedValues, item) {\n  return [...collectedValues, item];\n};\n\nconst saying = ['veni','vedi','veci'];\nconst initialValue = [];\nconst copy = saying.reduce(callback,initialValue);","position":{"start":{"line":170,"column":1,"offset":2846},"end":{"line":178,"column":4,"offset":3071},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"reduce에서 두개의 인수는 반환되는 항복과 개별항목\n반환값은 콜백함수가 반환하는 값을 누적한 것.","position":{"start":{"line":180,"column":1,"offset":3073},"end":{"line":181,"column":26,"offset":3129},"indent":[1]}}],"position":{"start":{"line":180,"column":1,"offset":3073},"end":{"line":181,"column":26,"offset":3129},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"불린, 배열, 수 등의 다양한 형태로 반환이 가능함","position":{"start":{"line":183,"column":1,"offset":3131},"end":{"line":183,"column":29,"offset":3159},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":3131},"end":{"line":183,"column":29,"offset":3159},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":185,"column":1,"offset":3161},"end":{"line":185,"column":4,"offset":3164},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"for...in 문과 for...of문으로 반복문을 정리하라","position":{"start":{"line":187,"column":5,"offset":3170},"end":{"line":187,"column":38,"offset":3203},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":3166},"end":{"line":187,"column":38,"offset":3203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"필요한 결과와 일치하지 않아 반복문에서 빠져나오고 싶을 때,\n배열이 아닌 컬렉션을 다룰 때 배열 메서드를 사용시 복잡한 경우가 있음","position":{"start":{"line":189,"column":1,"offset":3205},"end":{"line":190,"column":40,"offset":3278},"indent":[1]}}],"position":{"start":{"line":189,"column":1,"offset":3205},"end":{"line":190,"column":40,"offset":3278},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"const firms = new Map()\n\t.set(10,'Ivie Group')\n\t.set(23,'Soundscaping Source')\n\t.set(31,'Big 6');\n\nconst entries = [...firms];\nfor (let i=0;i<entries.length;i++){\n  const [id,name] = entries[i];\n  if(!isAvailable(id)){\n    return `${name}는 사용할 수 없습니다`;\n  }\n}\nreturn `모든 회사를 사용할 수 있습니다`;","position":{"start":{"line":192,"column":1,"offset":3280},"end":{"line":206,"column":4,"offset":3584},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"컬렉션을 사용할 경우 배열로의 변환과정이 필요","position":{"start":{"line":208,"column":1,"offset":3586},"end":{"line":208,"column":26,"offset":3611},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":3586},"end":{"line":208,"column":26,"offset":3611},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"for...of","position":{"start":{"line":210,"column":8,"offset":3620},"end":{"line":210,"column":16,"offset":3628},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":3613},"end":{"line":210,"column":16,"offset":3628},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이터레이터를 사용할 수 있음. 인덱스를 사용하지 않고 컬렉션의 멤버를 직접 순회","position":{"start":{"line":212,"column":1,"offset":3630},"end":{"line":212,"column":45,"offset":3674},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":3630},"end":{"line":212,"column":45,"offset":3674},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"for (const firm of firms) {\n  const [id, name] = firm;\n  if(!isAvailable(id)){\n    return `${name}는 사용할 수 없습니다`;\n  }\n}\nreturn `모든 회사를 사용할 수 있습니다`;","position":{"start":{"line":214,"column":1,"offset":3676},"end":{"line":222,"column":4,"offset":3840},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"변수 firm을 const로 선언, 유효범위를 갖기 때문에 다른 코드에 영향을 미치지 않음","position":{"start":{"line":224,"column":3,"offset":3844},"end":{"line":224,"column":53,"offset":3894},"indent":[]}}],"position":{"start":{"line":224,"column":3,"offset":3844},"end":{"line":224,"column":53,"offset":3894},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":3842},"end":{"line":224,"column":53,"offset":3894},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"배열 메서드와 같은 개념을 이용해서 개별 항목을 직접 다룰 수 있음","position":{"start":{"line":225,"column":3,"offset":3897},"end":{"line":225,"column":40,"offset":3934},"indent":[]}}],"position":{"start":{"line":225,"column":3,"offset":3897},"end":{"line":225,"column":40,"offset":3934},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":3895},"end":{"line":225,"column":40,"offset":3934},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"배열 변환과정이 없기 떄문에 약간의 최적화","position":{"start":{"line":226,"column":3,"offset":3937},"end":{"line":226,"column":26,"offset":3960},"indent":[]}}],"position":{"start":{"line":226,"column":3,"offset":3937},"end":{"line":226,"column":26,"offset":3960},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":3935},"end":{"line":226,"column":26,"offset":3960},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"예측가능성이 줄어드는 단점","position":{"start":{"line":227,"column":3,"offset":3963},"end":{"line":227,"column":17,"offset":3977},"indent":[]}}],"position":{"start":{"line":227,"column":3,"offset":3963},"end":{"line":227,"column":17,"offset":3977},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":3961},"end":{"line":227,"column":17,"offset":3977},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":3842},"end":{"line":227,"column":17,"offset":3977},"indent":[1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"for...in","position":{"start":{"line":229,"column":8,"offset":3986},"end":{"line":229,"column":16,"offset":3994},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":3979},"end":{"line":229,"column":16,"offset":3994},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const firms = {\n  '10':'Ivie Group',\n\t'23':'Soundscaping Source',\n\t'31':'Big 6',\n}","position":{"start":{"line":231,"column":1,"offset":3996},"end":{"line":237,"column":4,"offset":4096},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"for (const id in firms) {\n  if(!isAvailable(parseInt(id,10))){\n    return `${firms[id]}는 사용할 수 없습니다.`;\n  }\n}\nreturn '모든 회사를 사용할 수 있습니다';","position":{"start":{"line":239,"column":1,"offset":4098},"end":{"line":246,"column":4,"offset":4252},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"속성을 가져오기 때문에 이름과 값을 따로 추출할 필요가 없음","position":{"start":{"line":248,"column":1,"offset":4254},"end":{"line":248,"column":34,"offset":4287},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":4254},"end":{"line":248,"column":34,"offset":4287},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"<자바스크립트 코딩의 기술> ch5\",\"date\":\"2020-08-02T00:00:00.000Z\",\"tags\":[\"JS\"]}","position":{"start":{"line":250,"column":1,"offset":4289},"end":{"line":250,"column":108,"offset":4396},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":250,"column":108,"offset":4396}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"<자바스크립트 코딩의 기술> ch5\",\n  \"date\": \"2020-08-02T00:00:00.000Z\",\n  \"tags\": [\"JS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uD654\\uC0B4\\uD45C \\uD568\\uC218\\uB85C \\uBC18\\uBCF5\\uBB38\\uC744 \\uB2E8\\uC21C\\uD558\\uAC8C \\uB9CC\\uB4E4\\uC5B4\\uB77C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function capitalize(name) { // \\uAE30\\uBA85\\uD568\\uC218\\n  return name[0].toUpperCase() + name.slice(1);\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const capitalize = name => name[0].toUpperCase() + name.slice(1);\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"\\uBC30\\uC5F4 \\uBA54\\uC11C\\uB4DC\\uB85C \\uBC18\\uBCF5\\uBB38\\uC744 \\uC9E7\\uAC8C \\uC791\\uC131\\uD558\\uB77C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"map( )\\n\\uD615\\uD0DC\\uB97C \\uBC14\\uAFC0 \\uC218 \\uC788\\uC9C0\\uB9CC \\uAE38\\uC774\\uB294 \\uC720\\uC9C0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sort( )\\n\\uD615\\uD0DC\\uB098 \\uAE38\\uC774\\uB294 \\uBCC0\\uACBD\\uB418\\uC9C0 \\uC54A\\uACE0 \\uC21C\\uC11C\\uB9CC \\uBCC0\\uACBD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"filter( )\\n\\uAE38\\uC774\\uB294 \\uBCC0\\uACBD\\uD558\\uC9C0\\uB9CC \\uD615\\uD0DC\\uB294 \\uBC14\\uAFB8\\uC9C0 \\uC54A\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find( )\\n\\uBC30\\uC5F4\\uC744 \\uBC18\\uD658\\uD558\\uC9C0 \\uC54A\\uC74C\\n\\uD55C \\uAC1C\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uBC18\\uD658\\uB418\\uACE0 \\uD615\\uD0DC\\uB294 \\uBC14\\uB00C\\uC9C0 \\uC54A\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"forEach( )\\n\\uD615\\uD0DC\\uB97C \\uC774\\uC6A9\\uD558\\uC9C0\\uB9CC \\uC544\\uBB34\\uAC83\\uB3C4 \\uBC18\\uD658\\uD558\\uC9C0 \\uC54A\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"reduce( )\\n\\uAE38\\uC774\\uC640 \\uD615\\uD0DC\\uB97C \\uBC14\\uAFB8\\uB294 \\uAC83\\uC744 \\uBE44\\uB86F\\uD574\\uC11C \\uBB34\\uC5C7\\uC774\\uB4E0 \\uCC98\\uB9AC\\uD560 \\uC218 \\uC788\\uC74C\")), mdx(\"hr\", null), mdx(\"h3\", null, \"map( ) \\uBA54\\uC11C\\uB4DC\\uB85C \\uBE44\\uC2B7\\uD55C \\uAE38\\uC774\\uC758 \\uBC30\\uC5F4\\uC744 \\uC0DD\\uC131\\uD558\\uB77C\"), mdx(\"p\", null, \"\\uB9F5 \\uD568\\uC218\\uB294\\n\\uC785\\uB825\\uD55C \\uBC30\\uC5F4\\uC758 \\uC815\\uBCF4 \\uC911 \\uD55C \\uC870\\uAC01\\uC744 \\uBC1B\\uC544 \\uC0C8\\uB85C\\uC6B4 \\uAC12\\uC744 \\uBC18\\uD658,\\n\\uC815\\uBCF4\\uC758 \\uC77C\\uBD80\\uB97C \\uBC18\\uD658,\\n\\uC815\\uBCF4\\uB97C \\uBCC0\\uD615\\uD574\\uC11C \\uC0C8\\uB85C\\uC6B4 \\uAC12\\uC744 \\uBC18\\uD658\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const band = [\\n{\\n  name:'corbett',instrument:'guitar',\\n},\\n{\\n  name:'evan',instruement:'guitar',\\n},\\n{\\n  name:'sean',instruement:'bass',\\n},\\n]\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function getInstrument(member){\\n  return member.instrument;\\n}\\n\\nconst instrument = [];\\nfor (let i=0;i<band.length;i++){\\n  const instrument = band[i].instrument;\\n  instruments.push(instrument);\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const instruments = band.map(getInstrument);\\n// ['guitar','guitar','bass']\\nconst instruments = band.map(member => member.instrument);\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"filter( )\\uC640 find( )\\uB85C \\uB370\\uC774\\uD130\\uC758 \\uBD80\\uBD84\\uC9D1\\uD569\\uC744 \\uC0DD\\uC131\\uD558\\uB77C\"), mdx(\"h6\", null, \"filter\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const scores = [30,82,80,45];\\nfunction getNumberOfPassingScores(scores) {\\n  const passing = scores.filter(score => score > 59);\\n  // [82,70]\\n  return passing.length;\\n}\\n// 2\\n\")), mdx(\"p\", null, \"Filter \\uBA54\\uC11C\\uB4DC\\uB294 \\uD56D\\uC0C1 \\uBC30\\uC5F4\\uC744 \\uBC18\\uD658, \\uC870\\uAC74\\uC5D0 \\uB9DE\\uB294 \\uAC12\\uC774 \\uC5C6\\uB2E4\\uACE0 \\uD558\\uB354\\uB77C\\uB3C4 \\uBE48 \\uBC30\\uC5F4\\uC744 \\uBC18\\uD658\\uD568\"), mdx(\"h6\", null, \"find\"), mdx(\"p\", null, \"\\uCC38 \\uB610\\uB294 \\uAC70\\uC9D3 \\uAC12\\uC744 \\uBC18\\uD658\\uD558\\uB294 \\uD568\\uC218\\uB97C \\uC778\\uC218\\uB85C \\uBC1B\\uACE0,\\n\\uBC30\\uC5F4\\uC758 \\uD56D\\uBAA9\\uC5D0 \\uC804\\uB2EC\\uD55C \\uD568\\uC218\\uB85C \\uD3C9\\uAC00\\uD574 \\uCC38 \\uAC12\\uC744 \\uBC18\\uD658\\uD558\\uB294 \\uCCAB \\uBC88\\uC9F8 \\uD56D\\uBAA9\\uB9CC \\uBC18\\uD658\\n\\uCC38 \\uAC12\\uC744 \\uBC18\\uD658\\uD558\\uB294 \\uD56D\\uBAA9\\uC774 \\uC5C6\\uB2E4\\uBA74 undefined \\uBC18\\uD658. \\uADF8\\uB7EC\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uB2E4\\uB0A1\\uD3C9\\uAC00\\uB97C \\uC774\\uC6A9\\uD574 \\uAE30\\uBCF8\\uAC12\\uC744 \\uCD94\\uAC00\\uD558\\uB294 \\uAC83\\uC774 \\uC88B\\uC74C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const image = [{\\n  path:'./me.jpg',\\n  profile: false\\n}];\\nconst profile = images.find(image => image.profile) || {\\n  path:'./default.jpg'\\n};\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"forEach( )\\uB85C \\uB3D9\\uC77C\\uD55C \\uB3D9\\uC791\\uC744 \\uC801\\uC6A9\\uD558\\uB77C\"), mdx(\"p\", null, \"forEach\\uC758 \\uACBD\\uC6B0 \\uD568\\uC218\\uC758 \\uC720\\uD6A8\\uBC94\\uC704\\uB97C \\uBC97\\uC5B4\\uB098\\uB294 \\uC791\\uC5C5\\uC774 \\uD544\\uC694\\uD55C \\uACBD\\uC6B0, \\uBC18\\uB4DC\\uC2DC \\uBD80\\uC218\\uD6A8\\uACFC\\uAC00 \\uD544\\uC694\\uD55C \\uACBD\\uC6B0\\uC5D0 \\uC0AC\\uC6A9\"), mdx(\"p\", null, \"forEach\\uC758 \\uC7A5\\uC810\\uC740 \\uCCB4\\uC774\\uB2DD \\uACFC\\uC815\\uC5D0\\uC11C \\uB2E4\\uB978 \\uBC30\\uC5F4 \\uBA54\\uC11C\\uB4DC\\uC640 \\uACB0\\uD569\\uC774 \\uAC00\\uB2A5\\uD558\\uACE0\\n\\uB9E4\\uBC88 \\uBCC0\\uC218\\uC5D0 \\uBC30\\uC5F4 \\uBA54\\uC11C\\uB4DC\\uC758 \\uACB0\\uAD0F\\uAC12\\uC744 \\uC800\\uC7A5\\uD560 \\uD544\\uC694\\uC5C6\\uC774 \\uB3D9\\uC77C\\uD55C \\uBC30\\uC5F4\\uC5D0\\uC11C \\uC5EC\\uB7EC \\uC791\\uC5C5\\uC744 \\uCC98\\uB9AC\\uD560 \\uC218 \\uC788\\uC74C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const names = ['walter','white'];\\nconst capitalized1 = names.forEach(name => name.toUpperCase());\\ncapitalized; // undefined\\n\\nlet capitalized2 = [];\\nnames.forEach(name => capitalized.push(name.toUpperCase()));\\ncapitalized; // ['WALTER','WHITE']\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"\\uCCB4\\uC774\\uB2DD\\uC73C\\uB85C \\uBA54\\uC11C\\uB4DC\\uB97C \\uC5F0\\uACB0\\uD558\\uB77C\"), mdx(\"p\", null, \"\\uAC12\\uC744 \\uB2E4\\uC2DC \\uD560\\uB2F9\\uD558\\uC9C0 \\uC54A\\uACE0 \\uBC18\\uD658\\uB41C \\uAC1D\\uCCB4\\uC5D0 \\uBA54\\uC11C\\uB4DC\\uB97C \\uC989\\uC2DC \\uD638\\uCD9C\\uD558\\uB294 \\uAC83\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const sailors = [\\n  {\\n    name:'yi hong',\\n    active : true,\\n    email : 'yh@yhproductionds.io',\\n  },\\n  {\\n    name:'alex',\\n    active : true,\\n    email : '',\\n  },\\n  {\\n    name:'nathan',\\n    active : false,\\n    email : '',\\n  },\\n];\\n\\nsailors\\n    .filter(sailor => sailor.active)\\n    .map(sailor => sailor.email || `${sailor.name}@wiscsail.io`)\\n    .forEach(sailor => sendEmail(sailor));\\n\")), mdx(\"p\", null, \"\\uAC01 \\uBC30\\uC5F4 \\uBA54\\uC11C\\uB4DC\\uAC00 \\uACE0\\uC720\\uC758 \\uC791\\uC5C5\\uC744 \\uC218\\uD589\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uCF54\\uB4DC\\uB97C \\uD55C\\uB208\\uC5D0 \\uC774\\uD574\\uD560 \\uC218 \\uC788\\uC74C\"), mdx(\"p\", null, \"\\uB2E8\\uC810\\uC740 \\uC0C8\\uB85C\\uC6B4 \\uBA54\\uC11C\\uB4DC\\uB97C \\uD638\\uCD9C\\uD560 \\uB54C\\uB9C8\\uB2E4 \\uBC18\\uD658\\uB41C \\uBC30\\uC5F4 \\uC804\\uCCB4\\uB97C \\uB2E4\\uC2DC \\uBC18\\uBCF5\\uD568. \\uB300\\uADDC\\uBAA8 \\uB370\\uC774\\uD130\\uB97C \\uB2E4\\uB8F0 \\uB54C \\uACE0\\uB824\\uD574\\uC57C...\"), mdx(\"p\", null, \"\\uC138\\uBBF8\\uCF5C\\uB860\\uC740 \\uB9E8 \\uB9C8\\uC9C0\\uB9C9\\uC5D0\\uB9CC \\uC0AC\\uC6A9\\uD560 \\uAC83\\n\\uD638\\uCD9C\\uB418\\uB294 \\uBA54\\uC11C\\uB4DC\\uC5D0 \\uB300\\uD55C \\uC21C\\uC11C\\uB97C \\uC9C0\\uCF1C\\uC57C \\uD568\"), mdx(\"hr\", null), mdx(\"h3\", null, \"reduce( )\\uB85C \\uBC30\\uC5F4 \\uB370\\uC774\\uD130\\uB97C \\uBCC0\\uD658\\uD558\\uB77C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const callback = function (collectedValues, item) {\\n  return [...collectedValues, item];\\n};\\n\\nconst saying = ['veni','vedi','veci'];\\nconst initialValue = [];\\nconst copy = saying.reduce(callback,initialValue);\\n\")), mdx(\"p\", null, \"reduce\\uC5D0\\uC11C \\uB450\\uAC1C\\uC758 \\uC778\\uC218\\uB294 \\uBC18\\uD658\\uB418\\uB294 \\uD56D\\uBCF5\\uACFC \\uAC1C\\uBCC4\\uD56D\\uBAA9\\n\\uBC18\\uD658\\uAC12\\uC740 \\uCF5C\\uBC31\\uD568\\uC218\\uAC00 \\uBC18\\uD658\\uD558\\uB294 \\uAC12\\uC744 \\uB204\\uC801\\uD55C \\uAC83.\"), mdx(\"p\", null, \"\\uBD88\\uB9B0, \\uBC30\\uC5F4, \\uC218 \\uB4F1\\uC758 \\uB2E4\\uC591\\uD55C \\uD615\\uD0DC\\uB85C \\uBC18\\uD658\\uC774 \\uAC00\\uB2A5\\uD568\"), mdx(\"hr\", null), mdx(\"h3\", null, \"for...in \\uBB38\\uACFC for...of\\uBB38\\uC73C\\uB85C \\uBC18\\uBCF5\\uBB38\\uC744 \\uC815\\uB9AC\\uD558\\uB77C\"), mdx(\"p\", null, \"\\uD544\\uC694\\uD55C \\uACB0\\uACFC\\uC640 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC544 \\uBC18\\uBCF5\\uBB38\\uC5D0\\uC11C \\uBE60\\uC838\\uB098\\uC624\\uACE0 \\uC2F6\\uC744 \\uB54C,\\n\\uBC30\\uC5F4\\uC774 \\uC544\\uB2CC \\uCEEC\\uB809\\uC158\\uC744 \\uB2E4\\uB8F0 \\uB54C \\uBC30\\uC5F4 \\uBA54\\uC11C\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uC2DC \\uBCF5\\uC7A1\\uD55C \\uACBD\\uC6B0\\uAC00 \\uC788\\uC74C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const firms = new Map()\\n    .set(10,'Ivie Group')\\n    .set(23,'Soundscaping Source')\\n    .set(31,'Big 6');\\n\\nconst entries = [...firms];\\nfor (let i=0;i<entries.length;i++){\\n  const [id,name] = entries[i];\\n  if(!isAvailable(id)){\\n    return `${name}\\uB294 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4`;\\n  }\\n}\\nreturn `\\uBAA8\\uB4E0 \\uD68C\\uC0AC\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4`;\\n\")), mdx(\"p\", null, \"\\uCEEC\\uB809\\uC158\\uC744 \\uC0AC\\uC6A9\\uD560 \\uACBD\\uC6B0 \\uBC30\\uC5F4\\uB85C\\uC758 \\uBCC0\\uD658\\uACFC\\uC815\\uC774 \\uD544\\uC694\"), mdx(\"h6\", null, \"for...of\"), mdx(\"p\", null, \"\\uC774\\uD130\\uB808\\uC774\\uD130\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC74C. \\uC778\\uB371\\uC2A4\\uB97C \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uACE0 \\uCEEC\\uB809\\uC158\\uC758 \\uBA64\\uBC84\\uB97C \\uC9C1\\uC811 \\uC21C\\uD68C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"for (const firm of firms) {\\n  const [id, name] = firm;\\n  if(!isAvailable(id)){\\n    return `${name}\\uB294 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4`;\\n  }\\n}\\nreturn `\\uBAA8\\uB4E0 \\uD68C\\uC0AC\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4`;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCC0\\uC218 firm\\uC744 const\\uB85C \\uC120\\uC5B8, \\uC720\\uD6A8\\uBC94\\uC704\\uB97C \\uAC16\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uB2E4\\uB978 \\uCF54\\uB4DC\\uC5D0 \\uC601\\uD5A5\\uC744 \\uBBF8\\uCE58\\uC9C0 \\uC54A\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4 \\uBA54\\uC11C\\uB4DC\\uC640 \\uAC19\\uC740 \\uAC1C\\uB150\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uAC1C\\uBCC4 \\uD56D\\uBAA9\\uC744 \\uC9C1\\uC811 \\uB2E4\\uB8F0 \\uC218 \\uC788\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4 \\uBCC0\\uD658\\uACFC\\uC815\\uC774 \\uC5C6\\uAE30 \\uB584\\uBB38\\uC5D0 \\uC57D\\uAC04\\uC758 \\uCD5C\\uC801\\uD654\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608\\uCE21\\uAC00\\uB2A5\\uC131\\uC774 \\uC904\\uC5B4\\uB4DC\\uB294 \\uB2E8\\uC810\")), mdx(\"h6\", null, \"for...in\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const firms = {\\n  '10':'Ivie Group',\\n    '23':'Soundscaping Source',\\n    '31':'Big 6',\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"for (const id in firms) {\\n  if(!isAvailable(parseInt(id,10))){\\n    return `${firms[id]}\\uB294 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.`;\\n  }\\n}\\nreturn '\\uBAA8\\uB4E0 \\uD68C\\uC0AC\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4';\\n\")), mdx(\"p\", null, \"\\uC18D\\uC131\\uC744 \\uAC00\\uC838\\uC624\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC774\\uB984\\uACFC \\uAC12\\uC744 \\uB530\\uB85C \\uCD94\\uCD9C\\uD560 \\uD544\\uC694\\uAC00 \\uC5C6\\uC74C\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"<자바스크립트 코딩의 기술> ch5\",\n  \"date\": \"2020-08-02T00:00:00.000Z\",\n  \"tags\": [\"JS\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`화살표 함수로 반복문을 단순하게 만들어라`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function capitalize(name) { // 기명함수\n  return name[0].toUpperCase() + name.slice(1);\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const capitalize = name => name[0].toUpperCase() + name.slice(1);\n`}</code></pre>\n    <hr></hr>\n    <h3>{`배열 메서드로 반복문을 짧게 작성하라`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`map( )\n형태를 바꿀 수 있지만 길이는 유지`}</li>\n      <li parentName=\"ul\">{`sort( )\n형태나 길이는 변경되지 않고 순서만 변경`}</li>\n      <li parentName=\"ul\">{`filter( )\n길이는 변경하지만 형태는 바꾸지 않음`}</li>\n      <li parentName=\"ul\">{`find( )\n배열을 반환하지 않음\n한 개의 데이터가 반환되고 형태는 바뀌지 않음`}</li>\n      <li parentName=\"ul\">{`forEach( )\n형태를 이용하지만 아무것도 반환하지 않음`}</li>\n      <li parentName=\"ul\">{`reduce( )\n길이와 형태를 바꾸는 것을 비롯해서 무엇이든 처리할 수 있음`}</li>\n    </ul>\n    <hr></hr>\n    <h3>{`map( ) 메서드로 비슷한 길이의 배열을 생성하라`}</h3>\n    <p>{`맵 함수는\n입력한 배열의 정보 중 한 조각을 받아 새로운 값을 반환,\n정보의 일부를 반환,\n정보를 변형해서 새로운 값을 반환`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const band = [\n{\n  name:'corbett',instrument:'guitar',\n},\n{\n  name:'evan',instruement:'guitar',\n},\n{\n  name:'sean',instruement:'bass',\n},\n]\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function getInstrument(member){\n  return member.instrument;\n}\n\nconst instrument = [];\nfor (let i=0;i<band.length;i++){\n  const instrument = band[i].instrument;\n  instruments.push(instrument);\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const instruments = band.map(getInstrument);\n// ['guitar','guitar','bass']\nconst instruments = band.map(member => member.instrument);\n`}</code></pre>\n    <hr></hr>\n    <h3>{`filter( )와 find( )로 데이터의 부분집합을 생성하라`}</h3>\n    <h6>{`filter`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const scores = [30,82,80,45];\nfunction getNumberOfPassingScores(scores) {\n  const passing = scores.filter(score => score > 59);\n  // [82,70]\n  return passing.length;\n}\n// 2\n`}</code></pre>\n    <p>{`Filter 메서드는 항상 배열을 반환, 조건에 맞는 값이 없다고 하더라도 빈 배열을 반환함`}</p>\n    <h6>{`find`}</h6>\n    <p>{`참 또는 거짓 값을 반환하는 함수를 인수로 받고,\n배열의 항목에 전달한 함수로 평가해 참 값을 반환하는 첫 번째 항목만 반환\n참 값을 반환하는 항목이 없다면 undefined 반환. 그러기 때문에 다낡평가를 이용해 기본값을 추가하는 것이 좋음`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const image = [{\n  path:'./me.jpg',\n  profile: false\n}];\nconst profile = images.find(image => image.profile) || {\n  path:'./default.jpg'\n};\n`}</code></pre>\n    <hr></hr>\n    <h3>{`forEach( )로 동일한 동작을 적용하라`}</h3>\n    <p>{`forEach의 경우 함수의 유효범위를 벗어나는 작업이 필요한 경우, 반드시 부수효과가 필요한 경우에 사용`}</p>\n    <p>{`forEach의 장점은 체이닝 과정에서 다른 배열 메서드와 결합이 가능하고\n매번 변수에 배열 메서드의 결괏값을 저장할 필요없이 동일한 배열에서 여러 작업을 처리할 수 있음`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const names = ['walter','white'];\nconst capitalized1 = names.forEach(name => name.toUpperCase());\ncapitalized; // undefined\n\nlet capitalized2 = [];\nnames.forEach(name => capitalized.push(name.toUpperCase()));\ncapitalized; // ['WALTER','WHITE']\n`}</code></pre>\n    <hr></hr>\n    <h3>{`체이닝으로 메서드를 연결하라`}</h3>\n    <p>{`값을 다시 할당하지 않고 반환된 객체에 메서드를 즉시 호출하는 것`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const sailors = [\n  {\n    name:'yi hong',\n    active : true,\n    email : 'yh@yhproductionds.io',\n  },\n  {\n    name:'alex',\n    active : true,\n    email : '',\n  },\n  {\n    name:'nathan',\n    active : false,\n    email : '',\n  },\n];\n\nsailors\n    .filter(sailor => sailor.active)\n    .map(sailor => sailor.email || \\`\\${sailor.name}@wiscsail.io\\`)\n    .forEach(sailor => sendEmail(sailor));\n`}</code></pre>\n    <p>{`각 배열 메서드가 고유의 작업을 수행하기 때문에 코드를 한눈에 이해할 수 있음`}</p>\n    <p>{`단점은 새로운 메서드를 호출할 때마다 반환된 배열 전체를 다시 반복함. 대규모 데이터를 다룰 때 고려해야...`}</p>\n    <p>{`세미콜론은 맨 마지막에만 사용할 것\n호출되는 메서드에 대한 순서를 지켜야 함`}</p>\n    <hr></hr>\n    <h3>{`reduce( )로 배열 데이터를 변환하라`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const callback = function (collectedValues, item) {\n  return [...collectedValues, item];\n};\n\nconst saying = ['veni','vedi','veci'];\nconst initialValue = [];\nconst copy = saying.reduce(callback,initialValue);\n`}</code></pre>\n    <p>{`reduce에서 두개의 인수는 반환되는 항복과 개별항목\n반환값은 콜백함수가 반환하는 값을 누적한 것.`}</p>\n    <p>{`불린, 배열, 수 등의 다양한 형태로 반환이 가능함`}</p>\n    <hr></hr>\n    <h3>{`for...in 문과 for...of문으로 반복문을 정리하라`}</h3>\n    <p>{`필요한 결과와 일치하지 않아 반복문에서 빠져나오고 싶을 때,\n배열이 아닌 컬렉션을 다룰 때 배열 메서드를 사용시 복잡한 경우가 있음`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const firms = new Map()\n    .set(10,'Ivie Group')\n    .set(23,'Soundscaping Source')\n    .set(31,'Big 6');\n\nconst entries = [...firms];\nfor (let i=0;i<entries.length;i++){\n  const [id,name] = entries[i];\n  if(!isAvailable(id)){\n    return \\`\\${name}는 사용할 수 없습니다\\`;\n  }\n}\nreturn \\`모든 회사를 사용할 수 있습니다\\`;\n`}</code></pre>\n    <p>{`컬렉션을 사용할 경우 배열로의 변환과정이 필요`}</p>\n    <h6>{`for...of`}</h6>\n    <p>{`이터레이터를 사용할 수 있음. 인덱스를 사용하지 않고 컬렉션의 멤버를 직접 순회`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`for (const firm of firms) {\n  const [id, name] = firm;\n  if(!isAvailable(id)){\n    return \\`\\${name}는 사용할 수 없습니다\\`;\n  }\n}\nreturn \\`모든 회사를 사용할 수 있습니다\\`;\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`변수 firm을 const로 선언, 유효범위를 갖기 때문에 다른 코드에 영향을 미치지 않음`}</li>\n      <li parentName=\"ul\">{`배열 메서드와 같은 개념을 이용해서 개별 항목을 직접 다룰 수 있음`}</li>\n      <li parentName=\"ul\">{`배열 변환과정이 없기 떄문에 약간의 최적화`}</li>\n      <li parentName=\"ul\">{`예측가능성이 줄어드는 단점`}</li>\n    </ul>\n    <h6>{`for...in`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const firms = {\n  '10':'Ivie Group',\n    '23':'Soundscaping Source',\n    '31':'Big 6',\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`for (const id in firms) {\n  if(!isAvailable(parseInt(id,10))){\n    return \\`\\${firms[id]}는 사용할 수 없습니다.\\`;\n  }\n}\nreturn '모든 회사를 사용할 수 있습니다';\n`}</code></pre>\n    <p>{`속성을 가져오기 때문에 이름과 값을 따로 추출할 필요가 없음`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}