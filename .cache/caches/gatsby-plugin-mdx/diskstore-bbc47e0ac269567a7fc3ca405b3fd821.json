{"expireTime":9007200851360689000,"key":"gatsby-plugin-mdx-entire-payload-7ef8954ae373c241f685f491e6af76ab-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"프라미스를 이용해 비동기적으로 데이터를 가져오라","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":31,"offset":31},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":31,"offset":31},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"비동기","position":{"start":{"line":4,"column":8,"offset":40},"end":{"line":4,"column":11,"offset":43},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":11,"offset":43},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이전의 코드가 완전히 해결되지 않아도 이어지는 코드를 실행할 수 있는 언어","position":{"start":{"line":6,"column":1,"offset":45},"end":{"line":6,"column":42,"offset":86},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":45},"end":{"line":6,"column":42,"offset":86},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"프라미스","position":{"start":{"line":8,"column":8,"offset":95},"end":{"line":8,"column":12,"offset":99},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":88},"end":{"line":8,"column":12,"offset":99},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"비동기 작업을 전달바다어서 응당에 따라 두 가지 메서드 중 하나를 호출하는 객체\n프라미스는 비동기 작업이 성공하거나 충족된 경우 ","position":{"start":{"line":10,"column":1,"offset":101},"end":{"line":11,"column":28,"offset":173},"indent":[1]}},{"type":"inlineCode","value":"then()","position":{"start":{"line":11,"column":28,"offset":173},"end":{"line":11,"column":36,"offset":181},"indent":[]}},{"type":"text","value":"메서드에 결과를 넘겨줌\n실패하거나 거부된 경우 프라미스가 ","position":{"start":{"line":11,"column":36,"offset":181},"end":{"line":12,"column":20,"offset":213},"indent":[1]}},{"type":"inlineCode","value":"catch()","position":{"start":{"line":12,"column":20,"offset":213},"end":{"line":12,"column":29,"offset":222},"indent":[]}},{"type":"text","value":"메서드를 호출","position":{"start":{"line":12,"column":29,"offset":222},"end":{"line":12,"column":36,"offset":229},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":101},"end":{"line":12,"column":36,"offset":229},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"프라미스는 두 개의 인수, ","position":{"start":{"line":14,"column":1,"offset":231},"end":{"line":14,"column":16,"offset":246},"indent":[]}},{"type":"inlineCode","value":"resolve()","position":{"start":{"line":14,"column":16,"offset":246},"end":{"line":14,"column":27,"offset":257},"indent":[]}},{"type":"text","value":"와 ","position":{"start":{"line":14,"column":27,"offset":257},"end":{"line":14,"column":29,"offset":259},"indent":[]}},{"type":"inlineCode","value":"reject()","position":{"start":{"line":14,"column":29,"offset":259},"end":{"line":14,"column":39,"offset":269},"indent":[]}},{"type":"text","value":"를 전달 받음.\n","position":{"start":{"line":14,"column":39,"offset":269},"end":{"line":15,"column":1,"offset":278},"indent":[1]}},{"type":"inlineCode","value":"resolve()","position":{"start":{"line":15,"column":1,"offset":278},"end":{"line":15,"column":12,"offset":289},"indent":[]}},{"type":"text","value":"는 코드가 의도대로 동작했을 때 실행. ","position":{"start":{"line":15,"column":12,"offset":289},"end":{"line":15,"column":34,"offset":311},"indent":[]}},{"type":"inlineCode","value":"resolve()","position":{"start":{"line":15,"column":34,"offset":311},"end":{"line":15,"column":45,"offset":322},"indent":[]}},{"type":"text","value":"가 호출되면 ","position":{"start":{"line":15,"column":45,"offset":322},"end":{"line":15,"column":52,"offset":329},"indent":[]}},{"type":"inlineCode","value":"then()","position":{"start":{"line":15,"column":52,"offset":329},"end":{"line":15,"column":60,"offset":337},"indent":[]}},{"type":"text","value":"메서드에 전달된 함수가 실행","position":{"start":{"line":15,"column":60,"offset":337},"end":{"line":15,"column":75,"offset":352},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":231},"end":{"line":15,"column":75,"offset":352},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"function getUserPreferences(){\n  const preferences = new Promise((resolve, reject) => {\n    resolve({\n      theme:'dusk',\n    });\n  });\n  return preferences;\n}\n\ngetUserPreferences()\n\t.then(preferences => {\n  \tconsole.log(preferences.theme);\n});\n// 'dusk'","position":{"start":{"line":17,"column":1,"offset":354},"end":{"line":32,"column":4,"offset":626},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"function failUserPreference(){\n  const finder = new Promise((resolve,reject) => {\n    reject({\n      type:'접근 거부됨',\n    });\n  });\n  return finder;\n}\n\nfailUserPreference()\n\t.then(preferences => {\n  \tconsole.log(preferences.theme);\n})\n.catch(error => {\n  console.error(`실패: ${error.type}`);\n});","position":{"start":{"line":36,"column":1,"offset":630},"end":{"line":53,"column":4,"offset":940},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"프라미스를 연결하는 경우 ","position":{"start":{"line":55,"column":1,"offset":942},"end":{"line":55,"column":15,"offset":956},"indent":[]}},{"type":"inlineCode","value":"catch()","position":{"start":{"line":55,"column":15,"offset":956},"end":{"line":55,"column":24,"offset":965},"indent":[]}},{"type":"text","value":"메서드를 개별적으로 연결할 필요가 없음. 하나만 정의해서 모든 경우 처리 가능","position":{"start":{"line":55,"column":24,"offset":965},"end":{"line":55,"column":67,"offset":1008},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":942},"end":{"line":55,"column":67,"offset":1008},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":58,"column":1,"offset":1011},"end":{"line":58,"column":4,"offset":1014},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"async/await로 함수를 명료하게 생성하라","position":{"start":{"line":61,"column":5,"offset":1021},"end":{"line":61,"column":31,"offset":1047},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1017},"end":{"line":61,"column":31,"offset":1047},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"async","position":{"start":{"line":63,"column":1,"offset":1049},"end":{"line":63,"column":8,"offset":1056},"indent":[]}},{"type":"text","value":"키워드를 이용해서 선언한 함수는 비동기 데이터를 사용한다는 것을 의미","position":{"start":{"line":63,"column":8,"offset":1056},"end":{"line":63,"column":46,"offset":1094},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1049},"end":{"line":63,"column":46,"offset":1094},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"await","position":{"start":{"line":65,"column":1,"offset":1096},"end":{"line":65,"column":8,"offset":1103},"indent":[]}},{"type":"text","value":"키워드를 사용하면 값이 반환될 때까지 함수의 실행을 중지시킬 수 있음","position":{"start":{"line":65,"column":8,"offset":1103},"end":{"line":65,"column":46,"offset":1141},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1096},"end":{"line":65,"column":46,"offset":1141},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"async function getTheme(){\n  const { theme } = await getUserPreferences();\n  return theme;\n}\n\ngetTheme()\n\t.then(theme => {\n  \tconsole.log(theme);\n})","position":{"start":{"line":67,"column":1,"offset":1143},"end":{"line":77,"column":4,"offset":1309},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":79,"column":1,"offset":1311},"end":{"line":79,"column":4,"offset":1314},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"fetch로 간단한 AJAX 호출을 처리하라","position":{"start":{"line":81,"column":5,"offset":1320},"end":{"line":81,"column":29,"offset":1344},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1316},"end":{"line":81,"column":29,"offset":1344},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"GET 요청","position":{"start":{"line":83,"column":8,"offset":1353},"end":{"line":83,"column":14,"offset":1359},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1346},"end":{"line":83,"column":14,"offset":1359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"데이터를 가져오는 것만 처리한다면 끝점 URL을 인수로 해서 fetch를 호출하면 됨","position":{"start":{"line":85,"column":1,"offset":1361},"end":{"line":85,"column":48,"offset":1408},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":1361},"end":{"line":85,"column":48,"offset":1408},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"fetch('https://jsonplaceholder.typicode.com/posts/1');","position":{"start":{"line":87,"column":1,"offset":1410},"end":{"line":89,"column":4,"offset":1482},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"{\n  userId : 1,\n  id : 1,\n  title : 'First Post',\n  body : 'This is my first post ...',\n}","position":{"start":{"line":91,"column":1,"offset":1484},"end":{"line":98,"column":4,"offset":1591},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"요청을 보내고 나면 ","position":{"start":{"line":100,"column":1,"offset":1593},"end":{"line":100,"column":12,"offset":1604},"indent":[]}},{"type":"inlineCode","value":"fetch()","position":{"start":{"line":100,"column":12,"offset":1604},"end":{"line":100,"column":21,"offset":1613},"indent":[]}},{"type":"text","value":"는 응답을 처리하는 프라미스를 반환.\n이어서 해야 할 작업은 ","position":{"start":{"line":100,"column":21,"offset":1613},"end":{"line":101,"column":14,"offset":1647},"indent":[1]}},{"type":"inlineCode","value":"then()","position":{"start":{"line":101,"column":14,"offset":1647},"end":{"line":101,"column":22,"offset":1655},"indent":[]}},{"type":"text","value":"메서드에 응답을 처리하는 콜백함수를 추가하는 것","position":{"start":{"line":101,"column":22,"offset":1655},"end":{"line":101,"column":48,"offset":1681},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":1593},"end":{"line":101,"column":48,"offset":1681},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"응답 본문이 항상 사용할 수 있는 형식이 아니다. \n다행히 ","position":{"start":{"line":103,"column":1,"offset":1683},"end":{"line":104,"column":5,"offset":1716},"indent":[1]}},{"type":"inlineCode","value":"fetch()","position":{"start":{"line":104,"column":5,"offset":1716},"end":{"line":104,"column":14,"offset":1725},"indent":[]}},{"type":"text","value":"는 다양한 믹스인을 포함하고 있어서 자동으로 변환해줌\n","position":{"start":{"line":104,"column":14,"offset":1725},"end":{"line":105,"column":1,"offset":1755},"indent":[1]}},{"type":"inlineCode","value":"then()","position":{"start":{"line":105,"column":1,"offset":1755},"end":{"line":105,"column":9,"offset":1763},"indent":[]}},{"type":"text","value":" 메서드의 콜백에서 파싱된 데이터를 처리할 수 있음","position":{"start":{"line":105,"column":9,"offset":1763},"end":{"line":105,"column":37,"offset":1791},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":1683},"end":{"line":105,"column":37,"offset":1791},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"fetch('https://jsonplaceholder.typicode.com/posts/1')\n\t.then(data => {\n  \tif(!data.ok){\n      throw Error(data.status);\n    }\n  \treturn data.json();\n})\n.then(post => {\n  console.log(post.title);\n})\n.catch(e => {\n  console.log(e);\n});","position":{"start":{"line":107,"column":1,"offset":1793},"end":{"line":121,"column":4,"offset":2044},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"POST 요청","position":{"start":{"line":123,"column":8,"offset":2053},"end":{"line":123,"column":15,"offset":2060},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":2046},"end":{"line":123,"column":15,"offset":2060},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const update = {\n  title : 'Clarence White Techniques',\n  body : 'Amazing',\n  userId : 1,\n};\n\nconst options = {\n  method : 'POST',\n  headers: {\n    'Content-Type':'application/json',\n  },\n  body : JSON.stringify(update),\n};\n\nfetch('https://jsonplaceholder.typicode.com/posts',options)\n.then(data => {\n  if(!data.ok){\n    throw Error(data.status);\n  }\n  return data.json();\n}).then(update => {\n  console.log(update);\n}).catch(e => {\n  console.log(e);\n});","position":{"start":{"line":125,"column":1,"offset":2062},"end":{"line":151,"column":4,"offset":2533},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":153,"column":1,"offset":2535},"end":{"line":153,"column":4,"offset":2538},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"localStorage로 상태를 장기간 유지하라","position":{"start":{"line":155,"column":5,"offset":2544},"end":{"line":155,"column":31,"offset":2570},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":2540},"end":{"line":155,"column":31,"offset":2570},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"localStorage에 저장","position":{"start":{"line":157,"column":8,"offset":2579},"end":{"line":157,"column":24,"offset":2595},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":2572},"end":{"line":157,"column":24,"offset":2595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"localStorage 객체에 ","position":{"start":{"line":159,"column":1,"offset":2597},"end":{"line":159,"column":18,"offset":2614},"indent":[]}},{"type":"inlineCode","value":"setItem()","position":{"start":{"line":159,"column":18,"offset":2614},"end":{"line":159,"column":29,"offset":2625},"indent":[]}},{"type":"text","value":"메서드를 사용해서 값을 설정\n첫 번째 인수에는 키, 두 번째 인수에는 값을 전달","position":{"start":{"line":159,"column":29,"offset":2625},"end":{"line":160,"column":29,"offset":2669},"indent":[1]}}],"position":{"start":{"line":159,"column":1,"offset":2597},"end":{"line":160,"column":29,"offset":2669},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"데이터 가져오기","position":{"start":{"line":162,"column":8,"offset":2678},"end":{"line":162,"column":16,"offset":2686},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":2671},"end":{"line":162,"column":16,"offset":2686},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"localStorage.getItem(key);","position":{"start":{"line":164,"column":1,"offset":2688},"end":{"line":166,"column":4,"offset":2732},"indent":[1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"삭제","position":{"start":{"line":170,"column":8,"offset":2743},"end":{"line":170,"column":10,"offset":2745},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":2736},"end":{"line":170,"column":10,"offset":2745},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"localStorage.removeItem(key);","position":{"start":{"line":172,"column":1,"offset":2747},"end":{"line":174,"column":4,"offset":2794},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"localStorage에 담기는 데이터는 반드시 문자열이어야 함.\n","position":{"start":{"line":178,"column":1,"offset":2798},"end":{"line":179,"column":1,"offset":2835},"indent":[1]}},{"type":"inlineCode","value":"JSON.stringify()","position":{"start":{"line":179,"column":1,"offset":2835},"end":{"line":179,"column":19,"offset":2853},"indent":[]}},{"type":"text","value":"를 이용해 데이터를 문자열로 변환하고,\n다시 가져올 때는 ","position":{"start":{"line":179,"column":19,"offset":2853},"end":{"line":180,"column":11,"offset":2885},"indent":[1]}},{"type":"inlineCode","value":"JSON.parse()","position":{"start":{"line":180,"column":11,"offset":2885},"end":{"line":180,"column":25,"offset":2899},"indent":[]}},{"type":"text","value":"를 이용해 변환하면 됨","position":{"start":{"line":180,"column":25,"offset":2899},"end":{"line":180,"column":37,"offset":2911},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":2798},"end":{"line":180,"column":37,"offset":2911},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"여러 기기에서 데이터를 유지할 수는 없지만 로그인을 피할 수 있다는 이점","position":{"start":{"line":182,"column":1,"offset":2913},"end":{"line":182,"column":41,"offset":2953},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":2913},"end":{"line":182,"column":41,"offset":2953},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"<자바스크립트 코딩의 기술> ch9\",\"date\":\"2020-08-03T00:00:00.000Z\",\"tags\":[\"JS\"]}","position":{"start":{"line":184,"column":1,"offset":2955},"end":{"line":184,"column":108,"offset":3062},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":184,"column":108,"offset":3062}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"<자바스크립트 코딩의 기술> ch9\",\n  \"date\": \"2020-08-03T00:00:00.000Z\",\n  \"tags\": [\"JS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uD504\\uB77C\\uBBF8\\uC2A4\\uB97C \\uC774\\uC6A9\\uD574 \\uBE44\\uB3D9\\uAE30\\uC801\\uC73C\\uB85C \\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB77C\"), mdx(\"h6\", null, \"\\uBE44\\uB3D9\\uAE30\"), mdx(\"p\", null, \"\\uC774\\uC804\\uC758 \\uCF54\\uB4DC\\uAC00 \\uC644\\uC804\\uD788 \\uD574\\uACB0\\uB418\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uC774\\uC5B4\\uC9C0\\uB294 \\uCF54\\uB4DC\\uB97C \\uC2E4\\uD589\\uD560 \\uC218 \\uC788\\uB294 \\uC5B8\\uC5B4\"), mdx(\"h6\", null, \"\\uD504\\uB77C\\uBBF8\\uC2A4\"), mdx(\"p\", null, \"\\uBE44\\uB3D9\\uAE30 \\uC791\\uC5C5\\uC744 \\uC804\\uB2EC\\uBC14\\uB2E4\\uC5B4\\uC11C \\uC751\\uB2F9\\uC5D0 \\uB530\\uB77C \\uB450 \\uAC00\\uC9C0 \\uBA54\\uC11C\\uB4DC \\uC911 \\uD558\\uB098\\uB97C \\uD638\\uCD9C\\uD558\\uB294 \\uAC1D\\uCCB4\\n\\uD504\\uB77C\\uBBF8\\uC2A4\\uB294 \\uBE44\\uB3D9\\uAE30 \\uC791\\uC5C5\\uC774 \\uC131\\uACF5\\uD558\\uAC70\\uB098 \\uCDA9\\uC871\\uB41C \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"then()\"), \"\\uBA54\\uC11C\\uB4DC\\uC5D0 \\uACB0\\uACFC\\uB97C \\uB118\\uACA8\\uC90C\\n\\uC2E4\\uD328\\uD558\\uAC70\\uB098 \\uAC70\\uBD80\\uB41C \\uACBD\\uC6B0 \\uD504\\uB77C\\uBBF8\\uC2A4\\uAC00 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catch()\"), \"\\uBA54\\uC11C\\uB4DC\\uB97C \\uD638\\uCD9C\"), mdx(\"p\", null, \"\\uD504\\uB77C\\uBBF8\\uC2A4\\uB294 \\uB450 \\uAC1C\\uC758 \\uC778\\uC218, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolve()\"), \"\\uC640 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reject()\"), \"\\uB97C \\uC804\\uB2EC \\uBC1B\\uC74C.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolve()\"), \"\\uB294 \\uCF54\\uB4DC\\uAC00 \\uC758\\uB3C4\\uB300\\uB85C \\uB3D9\\uC791\\uD588\\uC744 \\uB54C \\uC2E4\\uD589. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolve()\"), \"\\uAC00 \\uD638\\uCD9C\\uB418\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"then()\"), \"\\uBA54\\uC11C\\uB4DC\\uC5D0 \\uC804\\uB2EC\\uB41C \\uD568\\uC218\\uAC00 \\uC2E4\\uD589\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function getUserPreferences(){\\n  const preferences = new Promise((resolve, reject) => {\\n    resolve({\\n      theme:'dusk',\\n    });\\n  });\\n  return preferences;\\n}\\n\\ngetUserPreferences()\\n    .then(preferences => {\\n    console.log(preferences.theme);\\n});\\n// 'dusk'\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function failUserPreference(){\\n  const finder = new Promise((resolve,reject) => {\\n    reject({\\n      type:'\\uC811\\uADFC \\uAC70\\uBD80\\uB428',\\n    });\\n  });\\n  return finder;\\n}\\n\\nfailUserPreference()\\n    .then(preferences => {\\n    console.log(preferences.theme);\\n})\\n.catch(error => {\\n  console.error(`\\uC2E4\\uD328: ${error.type}`);\\n});\\n\")), mdx(\"p\", null, \"\\uD504\\uB77C\\uBBF8\\uC2A4\\uB97C \\uC5F0\\uACB0\\uD558\\uB294 \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catch()\"), \"\\uBA54\\uC11C\\uB4DC\\uB97C \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uC5F0\\uACB0\\uD560 \\uD544\\uC694\\uAC00 \\uC5C6\\uC74C. \\uD558\\uB098\\uB9CC \\uC815\\uC758\\uD574\\uC11C \\uBAA8\\uB4E0 \\uACBD\\uC6B0 \\uCC98\\uB9AC \\uAC00\\uB2A5\"), mdx(\"hr\", null), mdx(\"h3\", null, \"async/await\\uB85C \\uD568\\uC218\\uB97C \\uBA85\\uB8CC\\uD558\\uAC8C \\uC0DD\\uC131\\uD558\\uB77C\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"async\"), \"\\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC774\\uC6A9\\uD574\\uC11C \\uC120\\uC5B8\\uD55C \\uD568\\uC218\\uB294 \\uBE44\\uB3D9\\uAE30 \\uB370\\uC774\\uD130\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4\\uB294 \\uAC83\\uC744 \\uC758\\uBBF8\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"await\"), \"\\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uAC12\\uC774 \\uBC18\\uD658\\uB420 \\uB54C\\uAE4C\\uC9C0 \\uD568\\uC218\\uC758 \\uC2E4\\uD589\\uC744 \\uC911\\uC9C0\\uC2DC\\uD0AC \\uC218 \\uC788\\uC74C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"async function getTheme(){\\n  const { theme } = await getUserPreferences();\\n  return theme;\\n}\\n\\ngetTheme()\\n    .then(theme => {\\n    console.log(theme);\\n})\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"fetch\\uB85C \\uAC04\\uB2E8\\uD55C AJAX \\uD638\\uCD9C\\uC744 \\uCC98\\uB9AC\\uD558\\uB77C\"), mdx(\"h6\", null, \"GET \\uC694\\uCCAD\"), mdx(\"p\", null, \"\\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uAC83\\uB9CC \\uCC98\\uB9AC\\uD55C\\uB2E4\\uBA74 \\uB05D\\uC810 URL\\uC744 \\uC778\\uC218\\uB85C \\uD574\\uC11C fetch\\uB97C \\uD638\\uCD9C\\uD558\\uBA74 \\uB428\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"fetch('https://jsonplaceholder.typicode.com/posts/1');\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"{\\n  userId : 1,\\n  id : 1,\\n  title : 'First Post',\\n  body : 'This is my first post ...',\\n}\\n\")), mdx(\"p\", null, \"\\uC694\\uCCAD\\uC744 \\uBCF4\\uB0B4\\uACE0 \\uB098\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetch()\"), \"\\uB294 \\uC751\\uB2F5\\uC744 \\uCC98\\uB9AC\\uD558\\uB294 \\uD504\\uB77C\\uBBF8\\uC2A4\\uB97C \\uBC18\\uD658.\\n\\uC774\\uC5B4\\uC11C \\uD574\\uC57C \\uD560 \\uC791\\uC5C5\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"then()\"), \"\\uBA54\\uC11C\\uB4DC\\uC5D0 \\uC751\\uB2F5\\uC744 \\uCC98\\uB9AC\\uD558\\uB294 \\uCF5C\\uBC31\\uD568\\uC218\\uB97C \\uCD94\\uAC00\\uD558\\uB294 \\uAC83\"), mdx(\"p\", null, \"\\uC751\\uB2F5 \\uBCF8\\uBB38\\uC774 \\uD56D\\uC0C1 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB294 \\uD615\\uC2DD\\uC774 \\uC544\\uB2C8\\uB2E4.\\n\\uB2E4\\uD589\\uD788 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetch()\"), \"\\uB294 \\uB2E4\\uC591\\uD55C \\uBBF9\\uC2A4\\uC778\\uC744 \\uD3EC\\uD568\\uD558\\uACE0 \\uC788\\uC5B4\\uC11C \\uC790\\uB3D9\\uC73C\\uB85C \\uBCC0\\uD658\\uD574\\uC90C\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"then()\"), \" \\uBA54\\uC11C\\uB4DC\\uC758 \\uCF5C\\uBC31\\uC5D0\\uC11C \\uD30C\\uC2F1\\uB41C \\uB370\\uC774\\uD130\\uB97C \\uCC98\\uB9AC\\uD560 \\uC218 \\uC788\\uC74C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"fetch('https://jsonplaceholder.typicode.com/posts/1')\\n    .then(data => {\\n    if(!data.ok){\\n      throw Error(data.status);\\n    }\\n    return data.json();\\n})\\n.then(post => {\\n  console.log(post.title);\\n})\\n.catch(e => {\\n  console.log(e);\\n});\\n\")), mdx(\"h6\", null, \"POST \\uC694\\uCCAD\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const update = {\\n  title : 'Clarence White Techniques',\\n  body : 'Amazing',\\n  userId : 1,\\n};\\n\\nconst options = {\\n  method : 'POST',\\n  headers: {\\n    'Content-Type':'application/json',\\n  },\\n  body : JSON.stringify(update),\\n};\\n\\nfetch('https://jsonplaceholder.typicode.com/posts',options)\\n.then(data => {\\n  if(!data.ok){\\n    throw Error(data.status);\\n  }\\n  return data.json();\\n}).then(update => {\\n  console.log(update);\\n}).catch(e => {\\n  console.log(e);\\n});\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"localStorage\\uB85C \\uC0C1\\uD0DC\\uB97C \\uC7A5\\uAE30\\uAC04 \\uC720\\uC9C0\\uD558\\uB77C\"), mdx(\"h6\", null, \"localStorage\\uC5D0 \\uC800\\uC7A5\"), mdx(\"p\", null, \"localStorage \\uAC1D\\uCCB4\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setItem()\"), \"\\uBA54\\uC11C\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD574\\uC11C \\uAC12\\uC744 \\uC124\\uC815\\n\\uCCAB \\uBC88\\uC9F8 \\uC778\\uC218\\uC5D0\\uB294 \\uD0A4, \\uB450 \\uBC88\\uC9F8 \\uC778\\uC218\\uC5D0\\uB294 \\uAC12\\uC744 \\uC804\\uB2EC\"), mdx(\"h6\", null, \"\\uB370\\uC774\\uD130 \\uAC00\\uC838\\uC624\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"localStorage.getItem(key);\\n\")), mdx(\"h6\", null, \"\\uC0AD\\uC81C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"localStorage.removeItem(key);\\n\")), mdx(\"p\", null, \"localStorage\\uC5D0 \\uB2F4\\uAE30\\uB294 \\uB370\\uC774\\uD130\\uB294 \\uBC18\\uB4DC\\uC2DC \\uBB38\\uC790\\uC5F4\\uC774\\uC5B4\\uC57C \\uD568.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON.stringify()\"), \"\\uB97C \\uC774\\uC6A9\\uD574 \\uB370\\uC774\\uD130\\uB97C \\uBB38\\uC790\\uC5F4\\uB85C \\uBCC0\\uD658\\uD558\\uACE0,\\n\\uB2E4\\uC2DC \\uAC00\\uC838\\uC62C \\uB54C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON.parse()\"), \"\\uB97C \\uC774\\uC6A9\\uD574 \\uBCC0\\uD658\\uD558\\uBA74 \\uB428\"), mdx(\"p\", null, \"\\uC5EC\\uB7EC \\uAE30\\uAE30\\uC5D0\\uC11C \\uB370\\uC774\\uD130\\uB97C \\uC720\\uC9C0\\uD560 \\uC218\\uB294 \\uC5C6\\uC9C0\\uB9CC \\uB85C\\uADF8\\uC778\\uC744 \\uD53C\\uD560 \\uC218 \\uC788\\uB2E4\\uB294 \\uC774\\uC810\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"<자바스크립트 코딩의 기술> ch9\",\n  \"date\": \"2020-08-03T00:00:00.000Z\",\n  \"tags\": [\"JS\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`프라미스를 이용해 비동기적으로 데이터를 가져오라`}</h3>\n    <h6>{`비동기`}</h6>\n    <p>{`이전의 코드가 완전히 해결되지 않아도 이어지는 코드를 실행할 수 있는 언어`}</p>\n    <h6>{`프라미스`}</h6>\n    <p>{`비동기 작업을 전달바다어서 응당에 따라 두 가지 메서드 중 하나를 호출하는 객체\n프라미스는 비동기 작업이 성공하거나 충족된 경우 `}<inlineCode parentName=\"p\">{`then()`}</inlineCode>{`메서드에 결과를 넘겨줌\n실패하거나 거부된 경우 프라미스가 `}<inlineCode parentName=\"p\">{`catch()`}</inlineCode>{`메서드를 호출`}</p>\n    <p>{`프라미스는 두 개의 인수, `}<inlineCode parentName=\"p\">{`resolve()`}</inlineCode>{`와 `}<inlineCode parentName=\"p\">{`reject()`}</inlineCode>{`를 전달 받음.\n`}<inlineCode parentName=\"p\">{`resolve()`}</inlineCode>{`는 코드가 의도대로 동작했을 때 실행. `}<inlineCode parentName=\"p\">{`resolve()`}</inlineCode>{`가 호출되면 `}<inlineCode parentName=\"p\">{`then()`}</inlineCode>{`메서드에 전달된 함수가 실행`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function getUserPreferences(){\n  const preferences = new Promise((resolve, reject) => {\n    resolve({\n      theme:'dusk',\n    });\n  });\n  return preferences;\n}\n\ngetUserPreferences()\n    .then(preferences => {\n    console.log(preferences.theme);\n});\n// 'dusk'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function failUserPreference(){\n  const finder = new Promise((resolve,reject) => {\n    reject({\n      type:'접근 거부됨',\n    });\n  });\n  return finder;\n}\n\nfailUserPreference()\n    .then(preferences => {\n    console.log(preferences.theme);\n})\n.catch(error => {\n  console.error(\\`실패: \\${error.type}\\`);\n});\n`}</code></pre>\n    <p>{`프라미스를 연결하는 경우 `}<inlineCode parentName=\"p\">{`catch()`}</inlineCode>{`메서드를 개별적으로 연결할 필요가 없음. 하나만 정의해서 모든 경우 처리 가능`}</p>\n    <hr></hr>\n    <h3>{`async/await로 함수를 명료하게 생성하라`}</h3>\n    <p><inlineCode parentName=\"p\">{`async`}</inlineCode>{`키워드를 이용해서 선언한 함수는 비동기 데이터를 사용한다는 것을 의미`}</p>\n    <p><inlineCode parentName=\"p\">{`await`}</inlineCode>{`키워드를 사용하면 값이 반환될 때까지 함수의 실행을 중지시킬 수 있음`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`async function getTheme(){\n  const { theme } = await getUserPreferences();\n  return theme;\n}\n\ngetTheme()\n    .then(theme => {\n    console.log(theme);\n})\n`}</code></pre>\n    <hr></hr>\n    <h3>{`fetch로 간단한 AJAX 호출을 처리하라`}</h3>\n    <h6>{`GET 요청`}</h6>\n    <p>{`데이터를 가져오는 것만 처리한다면 끝점 URL을 인수로 해서 fetch를 호출하면 됨`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`fetch('https://jsonplaceholder.typicode.com/posts/1');\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  userId : 1,\n  id : 1,\n  title : 'First Post',\n  body : 'This is my first post ...',\n}\n`}</code></pre>\n    <p>{`요청을 보내고 나면 `}<inlineCode parentName=\"p\">{`fetch()`}</inlineCode>{`는 응답을 처리하는 프라미스를 반환.\n이어서 해야 할 작업은 `}<inlineCode parentName=\"p\">{`then()`}</inlineCode>{`메서드에 응답을 처리하는 콜백함수를 추가하는 것`}</p>\n    <p>{`응답 본문이 항상 사용할 수 있는 형식이 아니다.\n다행히 `}<inlineCode parentName=\"p\">{`fetch()`}</inlineCode>{`는 다양한 믹스인을 포함하고 있어서 자동으로 변환해줌\n`}<inlineCode parentName=\"p\">{`then()`}</inlineCode>{` 메서드의 콜백에서 파싱된 데이터를 처리할 수 있음`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`fetch('https://jsonplaceholder.typicode.com/posts/1')\n    .then(data => {\n    if(!data.ok){\n      throw Error(data.status);\n    }\n    return data.json();\n})\n.then(post => {\n  console.log(post.title);\n})\n.catch(e => {\n  console.log(e);\n});\n`}</code></pre>\n    <h6>{`POST 요청`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const update = {\n  title : 'Clarence White Techniques',\n  body : 'Amazing',\n  userId : 1,\n};\n\nconst options = {\n  method : 'POST',\n  headers: {\n    'Content-Type':'application/json',\n  },\n  body : JSON.stringify(update),\n};\n\nfetch('https://jsonplaceholder.typicode.com/posts',options)\n.then(data => {\n  if(!data.ok){\n    throw Error(data.status);\n  }\n  return data.json();\n}).then(update => {\n  console.log(update);\n}).catch(e => {\n  console.log(e);\n});\n`}</code></pre>\n    <hr></hr>\n    <h3>{`localStorage로 상태를 장기간 유지하라`}</h3>\n    <h6>{`localStorage에 저장`}</h6>\n    <p>{`localStorage 객체에 `}<inlineCode parentName=\"p\">{`setItem()`}</inlineCode>{`메서드를 사용해서 값을 설정\n첫 번째 인수에는 키, 두 번째 인수에는 값을 전달`}</p>\n    <h6>{`데이터 가져오기`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`localStorage.getItem(key);\n`}</code></pre>\n    <h6>{`삭제`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`localStorage.removeItem(key);\n`}</code></pre>\n    <p>{`localStorage에 담기는 데이터는 반드시 문자열이어야 함.\n`}<inlineCode parentName=\"p\">{`JSON.stringify()`}</inlineCode>{`를 이용해 데이터를 문자열로 변환하고,\n다시 가져올 때는 `}<inlineCode parentName=\"p\">{`JSON.parse()`}</inlineCode>{`를 이용해 변환하면 됨`}</p>\n    <p>{`여러 기기에서 데이터를 유지할 수는 없지만 로그인을 피할 수 있다는 이점`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}