{"data":{"post":{"__typename":"MdxPost","slug":"/cpp-stl-vector","title":"CPP STL - Vector","date":"04.08.2020","tags":[{"name":"CPP","slug":"cpp"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CPP STL - Vector\",\n  \"date\": \"2020-08-04T00:00:00.000Z\",\n  \"tags\": [\"CPP\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"\\uC0DD\\uC131\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"vector<int> v1; // \\uBE48 \\uBCA1\\uD130 \\uC0DD\\uC131\\nvector<int> v2(5); // \\uC0AC\\uC774\\uC988\\uAC00 5\\uC778 \\uBCA1\\uD130 \\uC0DD\\uC131, \\uC804\\uBD80 0\\nvector<int> v3(5,1);    // \\uC0AC\\uC774\\uC988\\uAC00 5\\uC774\\uACE0 \\uC804\\uBD80 1\\nvector<int> v4(v2); // v2\\uB97C \\uBCF5\\uC0AC\\uD574\\uC11C v4 \\uC0DD\\uC131\\n\")), mdx(\"h5\", null, \"\\uCD94\\uAC00 / \\uC0AD\\uC81C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"v1.push_back(1);    // \\uBCA1\\uD130 \\uB4A4\\uC5D0 1\\uC744 \\uCD94\\uAC00\\nv1.pop_back();  // \\uBCA1\\uD130 \\uB9E8 \\uB4A4 \\uC6D0\\uC18C \\uC0AD\\uC81C\\n\\nv1.clear(); // \\uBAA8\\uB4E0 \\uC6D0\\uC18C \\uC0AD\\uC81C. \\uC6D0\\uC18C\\uB9CC \\uC81C\\uAC70\\uD558\\uACE0 \\uBA54\\uBAA8\\uB9AC\\uB294 \\uB0A8\\uC544\\uC788\\uC74C\\n\\nv1.erase(vec1.begin(), vec1.end()); //[a, b) \\uC8FC\\uC18C \\uAD6C\\uAC04\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uC6D0\\uC18C \\uC0AD\\uC81C\\nv1.erase(iter); // iter\\uAC00 \\uAC00\\uB9AC\\uD0A4\\uB294 \\uC6D0\\uC18C \\uC0AD\\uC81C\\n  \\nv1.insert(n,m); // n\\uBC88\\uCA30 \\uC790\\uB9AC\\uC5D0 m\\uAC12\\uC744 \\uC0BD\\uC785\\nv1.insert(a,b,c); // a\\uBC88\\uC9F8 \\uC790\\uB9AC\\uC5D0 b\\uAC1C\\uC758 c\\uAC12\\uC744 \\uC0BD\\uC785\\n\")), mdx(\"h5\", null, \"\\uD560\\uB2F9 / \\uC0AC\\uC774\\uC988 \\uAD00\\uB828\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"v1.assign(m,n); // m \\uC0AC\\uC774\\uC988\\uC758 \\uBCA1\\uD130 \\uD560\\uB2F9, \\uAC12\\uC740 \\uC804\\uBD80 n\\n  \\nv1.size();  // \\uBCA1\\uD130 \\uC6D0\\uC18C \\uAC2F\\uC218 \\uBC18\\uD658\\nv1.capacity();  // \\uBCA1\\uD130\\uAC00 \\uD560\\uB2F9\\uB41C \\uD06C\\uAE30 \\uBC18\\uD658, size\\uB791\\uC740 \\uB2E4\\uB984\\n  \\nv1.resize(n)    // \\uBCA1\\uD130 n\\uC73C\\uB85C \\uD06C\\uAE30 \\uC7AC\\uC124\\uC815\\n  \\nv1.empty(); // \\uBE44\\uC5C8\\uC73C\\uBA74 true \\uC544\\uB2C8\\uBA74 false\\n\")), mdx(\"h5\", null, \"\\uCC38\\uC870\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"v1.at(idx); // idx\\uBC88\\uC9F8 \\uC6D0\\uC18C \\uCC38\\uC870. \\uBC94\\uC704 \\uC810\\uAC80\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC548\\uC804\\nv1[idx];    // idx\\uBC88\\uC9F8 \\uC6D0\\uC18C \\uCC38\\uC870. \\uBC94\\uC704 \\uC810\\uAC80 \\uC548\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uBE60\\uB984\\n  \\nv1.front(); // \\uCCAB\\uBC88\\uC9F8 \\uC6D0\\uC18C \\uCC38\\uC870\\nv1.back();  // \\uB9C8\\uC9C0\\uB9C9 \\uC6D0\\uC18C \\uCC38\\uC870\\n  \\nv1.begin(); // \\uBCA1\\uD130\\uC758 \\uCCAB \\uC6D0\\uC18C\\uC758 \\uC8FC\\uC18C\\nv1.end();   // \\uB9C8\\uC9C0\\uB9C9 \\uC6D0\\uC18C\\uC758 \\uB2E4\\uC74C \\uC8FC\\uC18C \\uB9AC\\uD134\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"생성 추가 / 삭제 할당 / 사이즈 관련 참조","timeToRead":1,"banner":null}},"pageContext":{"slug":"/cpp-stl-vector","formatString":"DD.MM.YYYY"}}