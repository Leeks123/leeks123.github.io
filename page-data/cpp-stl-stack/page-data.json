{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/cpp-stl-stack","result":{"data":{"post":{"__typename":"MdxPost","slug":"/cpp-stl-stack","title":"CPP STL - Stack","date":"04.08.2020","tags":[{"name":"CPP","slug":"cpp"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CPP STL - Stack\",\n  \"date\": \"2020-08-04T00:00:00.000Z\",\n  \"tags\": [\"CPP\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), \"#include <iostream>\\n#include <stack>\\nusing namespace std;\\nint main(){\\n    \\n  stack<int> st;\\n    \\n  //\\uC6D0\\uC18C(4) \\uC0BD\\uC785\\n    st.push(4);\\n    \\n  //\\uB9E8 \\uC704 \\uC6D0\\uC18C \\uD31D. top\\uC774 \\uAC00\\uB9AC\\uD0A4\\uB294 \\uC6D0\\uC18C\\uB97C \\uC0AD\\uC81C. \\uBC18\\uD658x\\n    st.pop(); \\n    \\n  //\\uB9E8 \\uC704 \\uC6D0\\uC18C \\uAC12 \\uBC18\\uD658\\n    int n = st.pop();\\n    \\n  //\\uC2A4\\uD0DD\\uC774 \\uBE44\\uC5B4\\uC788\\uB2E4\\uBA74 1 \\uC544\\uB2C8\\uBA74 0\\n    printf(\\\"%d\\\\n\\\", st.empty());\\n    \\n  //\\uC2A4\\uD0DD\\uC5D0 \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uB294 \\uC6D0\\uC18C\\uC758 \\uC218 \\uCD9C\\uB825\\n    printf(\\\"%d\\\\n\\\", st.size());\\n    \\n  return 0;\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB370\\uD06C\\uCEE8\\uD14C\\uC774\\uB108 - \\uB0B4\\uBD80 \\uAD6C\\uC870\\uAC00 \\uB9AC\\uC2A4\\uD2B8 (\\uC2A4\\uD0DD\\uC774 \\uC774 \\uACBD\\uC6B0)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBCA1\\uD130\\uCEE8\\uD14C\\uC774\\uB108 - \\uB0B4\\uBD80\\uAD6C\\uC870\\uAC00 \\uB3D9\\uC801\\uBC30\\uC5F4\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3C9\\uADE0\\uC801\\uC73C\\uB85C \\uB370\\uD06C\\uAC00 \\uBCA1\\uD130\\uBCF4\\uB2E4 \\uB354 \\uBE60\\uB974\\uAC8C \\uB3D9\\uC791\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"데크컨테이너 - 내부 구조가 리스트 (스택이 이 경우) 벡터컨테이너 - 내부구조가 동적배열 평균적으로 데크가 벡터보다 더 빠르게 동작","timeToRead":1,"banner":null}},"pageContext":{"slug":"/cpp-stl-stack","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}