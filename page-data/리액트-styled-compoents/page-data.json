{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/리액트-styled-compoents","result":{"data":{"post":{"__typename":"MdxPost","slug":"/리액트-styled-compoents","title":"리액트 styled-compoents","date":"02.09.2020","tags":[{"name":"React","slug":"react"},{"name":"리다기","slug":"리다기"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"리액트 styled-compoents\",\n  \"date\": \"2020-09-02T00:00:00.000Z\",\n  \"tags\": [\"React\", \"리다기\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\uC124\\uCE58\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ npm install styled-compoents\\n\")), mdx(\"h3\", null, \"\\uC2A4\\uD0C0\\uC77C\\uB9C1\\uB41C \\uC5D8\\uB9AC\\uBA3C\\uD2B8 \\uB9CC\\uB4E4\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import styled from 'styled-compoents';\\n\\nconst MyComponent = styled.div`\\n    font-size : 2rem;\\n`;\\n// styled.\\uD0DC\\uADF8\\uBA85 \\uC73C\\uB85C \\uAD6C\\uD604\\n\\nconst MyInput = styled.('input')`\\n    background : gray;\\n`;\\n// \\uD0DC\\uADF8\\uC758 \\uD0C0\\uC785\\uC744 \\uD568\\uC218 \\uC778\\uC790\\uB85C \\uC804\\uB2EC\\n\\nconst StyledLink = styled(Link)`\\n    color : blue;\\n`;\\n// \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uD615\\uC2DD\\uC758 \\uAC12\\uC744 \\uB123\\uC5B4\\uC90C\\n\")), mdx(\"h3\", null, \"\\uC2A4\\uD0C0\\uC77C\\uC5D0\\uC11C props \\uC870\\uD654\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const Box = styled.div`\\n    background : ${props=> props.color || 'blue'};\\n    padding : 1rem;\\n`\\n\\n...\\n\\n<Box color='black'>(...)</Box>\\n\")), mdx(\"h3\", null, \"\\uC870\\uAC74\\uBD80 \\uC2A4\\uD0C0\\uC77C\\uB9C1\"), mdx(\"p\", null, \"\\uC5EC\\uB7EC \\uC904\\uC758 \\uC2A4\\uD0C0\\uC77C \\uAD6C\\uBB38\\uC744 \\uC870\\uAC74\\uBD80\\uB85C \\uC124\\uC815\\uD574\\uC57C \\uD558\\uB294 \\uACBD\\uC6B0\\uC5D0\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"css\"), \"\\uB97C \\uBD88\\uB7EC\\uC640\\uC57C \\uD568\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import styled, { css } from \\\"styled-compoents\\\";\\n\\nconst Button = styled.button`\\n  background: white;\\n  color: black;\\n\\n  &:hover {\\n    background: rgba(255, 255, 255, 0.9);\\n  }\\n\\n  ${(props) =>\\n    props.inverted &&\\n    css`\\n      background: none;\\n      border: 2px solid white;\\n    `};\\n`;\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inverted\"), \"\\uAC12\\uC774 true\\uC77C \\uB54C \\uD2B9\\uC815 \\uC2A4\\uD0C0\\uC77C\\uC744 \\uBD80\\uC5EC \", mdx(\"br\", null)));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"설치 스타일링된 엘리먼트 만들기 스타일에서 props 조화 조건부 스타일링 여러 줄의 스타일 구문을 조건부로 설정해야 하는 경우에는  css 를 불러와야 함 inverted 값이 true일 때 특정 스타일을 부여 ","timeToRead":1,"banner":null}},"pageContext":{"slug":"/리액트-styled-compoents","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}